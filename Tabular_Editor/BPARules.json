[
  {
    "ID": "SEM_ATUALIZACAO_INCREMENTAL",
    "Name": "01.1 Atualização Incremental Desativada",
    "Category": "01.Atualização",
    "Description": "As tabelas fato devem possuir atualização incremental, porém deve ser verificado se é possivel fazer com a coluna de data da tabela.",
    "Severity": 5,
    "Scope": "Table",
    "Expression": "\r\nEnableRefreshPolicy = false\r\n\r\nand\r\n(\r\nUsedInRelationships.Any(ToCardinality == \"One\" and FromCardinality == \"Many\" and current.Name == FromTable.Name)\r\nor\r\nUsedInRelationships.Any(ToCardinality == \"Many\" and FromCardinality == \"One\" and current.Name == ToTable.Name)\r\n)\r\n\r\nAnd\r\n!RegEx.IsMatch(Name,\"^[dD]\")\r\n\r\n",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "CORRIGIR_PARAMETRO_INCREMENTAL",
    "Name": "01.2 Corrigir Parametro da Atualização Incremental",
    "Category": "01.Atualização",
    "Description": "Os parametros foram digitados de forma correta \"RangeStart\" e \"RangeEnd\"",
    "Severity": 5,
    "Scope": "NamedExpression",
    "Expression": "(\r\n!Name.Contains(\"RangeStart\") and\r\nName.IndexOf(\"RangeStart\", StringComparison.OrdinalIgnoreCase) >=0\r\n)\r\nor\r\n(\r\n!Name.Contains(\"RangeEnd\") and\r\nName.IndexOf(\"RangeEnd\", StringComparison.OrdinalIgnoreCase) >=0\r\n)",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "CORRIGIR_FILTRO_INCREMENTAL",
    "Name": "01.3 Corrigir Filtro da Atualização Incremental",
    "Category": "01.Atualização",
    "Description": "O filtro a atualização incremental deve ser Data >= \"RangeStart\" e Data < \"RangeEnd\"\r\nsempre para RangeStart deve ser maior ou igual\r\nsempre para RangeEnd deve ser somente menor",
    "Severity": 5,
    "Scope": "Table",
    "Expression": "(\r\nEnableRefreshPolicy = true\r\nand\r\nSourceExpression.Contains(\"RangeStart\")\r\nand\r\nSourceExpression.Contains(\"RangeEnd\") \r\nand\r\nRegex.IsMatch(SourceExpression, \"(?is)(?:(?:>|<|<=)\\s*'\"\"[A-Za-z0-9À-ÿ_\\s&\\(\\.]*?RangeStart\\s*,\\s*['\"\"A-Za-z0-9À-ÿ_\\s&\\)\\.-]*?(?:>=|<=|>)\\s*'\"\"\\s*&\\s*[A-Za-z0-9 \\(\\.]*?RangeEnd|(?:>|<|<=)\\s*'\"\"[A-Za-z0-9À-ÿ_\\s&\\(\\.]*?RangeStart\\s*,\\s*['\"\"A-Za-z0-9À-ÿ_\\s&\\)\\.-]*?(?:<)\\s*'\"\"\\s*&\\s*[A-Za-z0-9 \\(\\.]*?RangeEnd|(?:>=)\\s*'\"\"[A-Za-z0-9À-ÿ_\\s&\\(\\.]*?RangeStart\\s*,\\s*['\"\"A-Za-z0-9À-ÿ_\\s&\\)\\.-]*?(?:>=|<=|>)\\s*'\"\"\\s*&\\s*[A-Za-z0-9 \\(\\.]*?RangeEnd)\")\r\n)\r\n\r\nor\r\n\r\n(\r\nEnableRefreshPolicy = false\r\nand\r\nPartitions.Any(\r\n\r\n\tExpression.Contains(\"RangeStart\")\r\n\tand\r\n        Expression.Contains(\"RangeEnd\") \r\n\tand\r\n        Regex.IsMatch(Expression, \"(?is)(?:(?:>|<|<=)\\s*'\"\"[A-Za-z0-9À-ÿ_\\s&\\(\\.]*?RangeStart\\s*,\\s*['\"\"A-Za-z0-9À-ÿ_\\s&\\)\\.-]*?(?:>=|<=|>)\\s*'\"\"\\s*&\\s*[A-Za-z0-9 \\(\\.]*?RangeEnd|(?:>|<|<=)\\s*'\"\"[A-Za-z0-9À-ÿ_\\s&\\(\\.]*?RangeStart\\s*,\\s*['\"\"A-Za-z0-9À-ÿ_\\s&\\)\\.-]*?(?:<)\\s*'\"\"\\s*&\\s*[A-Za-z0-9 \\(\\.]*?RangeEnd|(?:>=)\\s*'\"\"[A-Za-z0-9À-ÿ_\\s&\\(\\.]*?RangeStart\\s*,\\s*['\"\"A-Za-z0-9À-ÿ_\\s&\\)\\.-]*?(?:>=|<=|>)\\s*'\"\"\\s*&\\s*[A-Za-z0-9 \\(\\.]*?RangeEnd)\")\r\n\t\r\n)\r\n)",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "EVITE_INCREMENTAL_MES_TRIMESTRE",
    "Name": "01.4 Evite Incremental de 1 Mês ou 1 Trimestre",
    "Category": "01.Atualização",
    "Description": "O comportamento da incremental 1 mês não é de atualizar os ultimos 30 dias e sim atualizar somente o mês atual\r\nExemplo para o dia 01/04/2024\r\nIncremental de 1 Mês atualiza o periodo     = 01/04/2024 - 30/04/2024 (não considera mês anterior)\r\nIncremental de 2 Meses atualiza o periodo = 01/03/2024 - 30/04/2024 (considera mês anterior)\r\n\r\nO mesmo se aplicada para o trimestre, caso precise que seus dados atualizem os ultimos 3 meses, utilize a opção de meses ao invés de trimestre",
    "Severity": 4,
    "Scope": "Table",
    "Expression": "\r\nEnableRefreshPolicy = true\r\nand\r\n(\r\nIncrementalGranularity = \"Month\"\r\nor\r\nIncrementalGranularity = \"Quarter\"\r\n)\r\nand\r\nIncrementalPeriods = 1",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "HISTORICO_TRIMESTRE",
    "Name": "02. Histórico da atualização incremental utilizar Trimestre ao invés de Ano",
    "Category": "01.Atualização",
    "Description": "Configurar o histórico como trimestre ao invés de ano, com isso reduz o volume de dados históricos.",
    "Severity": 4,
    "Scope": "Table",
    "Expression": "EnableRefreshPolicy = true\r\nand\r\nRollingWindowGranularity = \"YEAR\"",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "Query_INATIVO",
    "Name": "03.1 Verificar o Query Folding",
    "Category": "02.Consulta SQL",
    "Description": "Verificar se o Query Folding dessas tabelas está ativo",
    "Severity": 5,
    "Scope": "Table",
    "Expression": "Partitions.Any(\r\nExpression.IndexOf(\"SELECT\", StringComparison.OrdinalIgnoreCase) >= 0\r\nand\r\nExpression.IndexOf(\"FROM\", StringComparison.OrdinalIgnoreCase) >= 0\r\n)\r\nand \r\n(\r\nExpression.Contains(\"Table.\")\r\nor\r\nExpression.Contains(\"List.\")\r\n)",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "INCREMENTAL_FOLDING_DESATIVADO",
    "Name": "03.2 Incremental com Query Folding Desativado",
    "Category": "02.Consulta SQL",
    "Description": "Verificar se o Query Folding dessas tabelas está ativo",
    "Severity": 3,
    "Scope": "Table",
    "Expression": "!(GetAnnotation(\"PBI_IsMQueryFoldable\") = \"True\")\r\nand\r\nPartitions.Any(\r\nExpression.IndexOf(\"RangeStart\", StringComparison.OrdinalIgnoreCase) >= 0\r\nand\r\nExpression.IndexOf(\"RangeEnd\", StringComparison.OrdinalIgnoreCase) >= 0\r\n)\r\n\r\n\r\n",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "TABELA_CRIADA_SEM_SQL",
    "Name": "04. Tabela Criada sem SQL",
    "Category": "02.Consulta SQL",
    "Description": "As tabelas devem criadas utilizadando consulta SQL para reduzir a quantidade de etapas no Power Query",
    "Severity": 5,
    "Scope": "Table",
    "Expression": "(\r\nEnableRefreshPolicy = true\r\nand\r\nSourceExpression.Replace(\".Select\",\"\").IndexOf(\"SELECT\", StringComparison.OrdinalIgnoreCase) = -1\r\nand\r\nColumns.Count() > 1\r\n)\r\n\r\nor\r\n(\r\nEnableRefreshPolicy = false\r\nand\r\nColumns.Count() > 1\r\nand\r\n\r\nPartitions.Any(\r\nExpression.Replace(\".Select\",\"\").IndexOf(\"SELECT\", StringComparison.OrdinalIgnoreCase) = -1\r\nand\r\nExpression.IndexOf(\"Table.FromRows(Json.Document(Binary.Decompress(\", StringComparison.OrdinalIgnoreCase) = -1\r\nand\r\nExpression.IndexOf(\"NAMEOF\", StringComparison.OrdinalIgnoreCase) = -1\r\nand\r\nExpression.IndexOf(\"GENERATESERIES\", StringComparison.OrdinalIgnoreCase) = -1\r\nand\r\n!Name.StartsWith(\"DateTableTemplate_\") \r\nand\r\n!Name.StartsWith(\"LocalDateTable_\")\r\n)\r\n)",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "COLUNAS_CALCULADAS_DAX",
    "Name": "05.1 Colunas Calculadas no DAX",
    "Category": "02.Consulta SQL",
    "Description": "Priorize a criação de colunas no SQL antes de criar no Power Query ou em DAX",
    "Severity": 4,
    "Scope": "CalculatedColumn",
    "Expression": "IsDataTypeInferred == true\r\nand\r\n!Table.Name.StartsWith(\"DateTableTemplate_\") \n\r\nand\r\n\n\n!Table.Name.StartsWith(\"LocalDateTable_\")",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "COLUNAS_CALCULADAS_POWER_QUERY",
    "Name": "05.2 Colunas Calculadas no Power Query",
    "Category": "02.Consulta SQL",
    "Description": "Priorize a criação de colunas no SQL antes de criar no Power Query ou em DAX",
    "Severity": 4,
    "Scope": "Table",
    "Expression": "(\r\nEnableRefreshPolicy = true\r\nand\r\nSourceExpression.Contains(\"Table.AddColumn\")\r\n)\r\n\r\nor\r\n(\r\nEnableRefreshPolicy = false\r\nand\r\n\r\nPartitions.Any(\r\nExpression.Contains(\"Table.AddColumn\")\r\n)\r\n)",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "SEM_TABELA_CALENDARIO_SQL",
    "Name": "06. Sem Tabela dCalendario (Consulta SQL)",
    "Category": "02.Consulta SQL",
    "Description": "Utilizar a tabela calendario do Databricks \"silver.calendario\"",
    "Severity": 3,
    "Scope": "Table",
    "Expression": "\r\nPartitions.Where(\nExpression.IndexOf(\"calendar\", StringComparison.OrdinalIgnoreCase) = -1).Count() > 0\n\n\r\nand\r\n(\r\nUsedInRelationships.Any(FromColumn.DataType.ToString() == \"DateTime\" and current.Name == FromTable.Name and FromCardinality == \"One\" and CrossFilteringBehavior == CrossFilteringBehavior.OneDirection)\r\nor\r\n\n\n\nUsedInRelationships.Any(ToColumn.DataType.ToString() == \"DateTime\" and current.Name == ToTable.Name and ToCardinality == \"One\" and CrossFilteringBehavior == CrossFilteringBehavior.OneDirection)\n\r\n)",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "TABELA_MAIS_30_COLUNAS",
    "Name": "07. Tabela com Mais de 30 Colunas. Está Normalizada?",
    "Category": "02.Consulta SQL",
    "Description": "Verificar se todas colunas são realmente utilizadas ou se existe oportunidade de normalização",
    "Severity": 4,
    "Scope": "Table",
    "Expression": "Columns.Count() > 30",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "ETAPAS_REDUNDANTES",
    "Name": "08. Etapas Redundantes",
    "Category": "03.Power Query",
    "Description": "As tabelas devem criadas utilizadando consulta SQL para reduzir a quantidade de etapas no Power Query",
    "Severity": 5,
    "Scope": "Table",
    "Expression": "(\r\nEnableRefreshPolicy = true\r\nand\r\n\r\n!(SourceExpression == null)\r\nand\r\n(\r\n   Regex.Matches(SourceExpression, \"Table.SelectRows\").Count > 1            \r\nor Regex.Matches(SourceExpression, \"Table.TransformColumnTypes\").Count > 1  \r\nor Regex.Matches(SourceExpression, \"Table.RemoveColumns\").Count > 1         \r\nor Regex.Matches(SourceExpression, \"Table.SelectColumns\").Count > 1         \r\nor Regex.Matches(SourceExpression, \"Table.RenameColumns\").Count > 1\r\nor Regex.Matches(SourceExpression, \"Table.Sort\").Count > 0\r\nor Regex.Matches(SourceExpression, \"Table.ReorderColumns\").Count > 0\r\n)\r\n)\r\n\r\nor\r\n(\r\nEnableRefreshPolicy = false\r\nand\r\n\r\nPartitions.Any(\r\n!(Expression == null)\r\nand\r\n(\r\n   Regex.Matches(Expression, \"Table.SelectRows\").Count > 1            \r\nor Regex.Matches(Expression, \"Table.TransformColumnTypes\").Count > 1  \r\nor Regex.Matches(Expression, \"Table.RemoveColumns\").Count > 1         \r\nor Regex.Matches(Expression, \"Table.SelectColumns\").Count > 1         \r\nor Regex.Matches(Expression, \"Table.RenameColumns\").Count > 1\r\nor Regex.Matches(Expression, \"Table.Sort\").Count > 0\r\nor Regex.Matches(Expression, \"Table.ReorderColumns\").Count > 0\r\n)\r\n)\r\n)",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "RELACIONAMENTO_MESMO_TIPO",
    "Name": "10. Corrigir tipagem dos dados, colunas do relacionamentos devem ter o mesmo tipo",
    "Category": "03.Power Query",
    "Description": "As colunas usadas em um relacionamento devem ser do mesmo tipo de dados",
    "Severity": 5,
    "Scope": "Relationship",
    "Expression": "FromColumn.DataType != ToColumn.DataType",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "CLUSTER_ALTA_CONCORRENCIA_DEV",
    "Name": "11.1 Cluster Alta Concorrencia ou DEV",
    "Category": "03.Power Query",
    "Description": "Não utilizar cluster de alta concorrencia ou de DEV\r\n\r\nCluster de DEV: /sql/1.0/endpoints/1727d88509900ba1\r\nCluster Alta Concorrencia: sql/protocolv1/o/...",
    "Severity": 5,
    "Scope": "Table",
    "Expression": "(\r\nEnableRefreshPolicy = true\r\nand\r\n(\r\n\tExpression.IndexOf(\"sql/protocolv1/o/\", StringComparison.OrdinalIgnoreCase) >=0\r\n\tor\r\n\tExpression.IndexOf(\"/sql/1.0/endpoints/1727d88509900ba1\", StringComparison.OrdinalIgnoreCase) >=0\r\n)\r\n)\r\n\r\nor\r\n\r\n(\r\nEnableRefreshPolicy = false\r\nand\r\nPartitions.Any(\r\n\tExpression.IndexOf(\"sql/protocolv1/o/\", StringComparison.OrdinalIgnoreCase) >=0\r\n\tor\r\n\tExpression.IndexOf(\"/sql/1.0/endpoints/1727d88509900ba1\", StringComparison.OrdinalIgnoreCase) >=0\r\n)\r\n)\r\n",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "CLUSTER_ALTA_CONCORRENCIA_PARAMETRO",
    "Name": "11.2 Cluster Alta Concorrencia ou DEV no Parametro",
    "Category": "03.Power Query",
    "Description": "Não utilizar cluster de alta concorrencia ou de DEV\r\n\r\nCluster de DEV: /sql/1.0/endpoints/1727d88509900ba1\r\nCluster Alta Concorrencia: sql/protocolv1/o/...",
    "Severity": 5,
    "Scope": "NamedExpression",
    "Expression": "Expression.IndexOf(\"sql/protocolv1/o/\", StringComparison.OrdinalIgnoreCase) >=0\r\nor\r\nExpression.IndexOf(\"/sql/1.0/endpoints/1727d88509900ba1\", StringComparison.OrdinalIgnoreCase) >=0",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "DESATIVAR_REFRESH_TABELA_MANUAL",
    "Name": "12. Desativar Atualização de Tabela Manual",
    "Category": "03.Power Query",
    "Description": "Desative a atualização das tabelas configuradas como \"Inserir Dados\" ",
    "Severity": 1,
    "Scope": "Table",
    "Expression": "ExcludeFromModelRefresh == false\r\nand\r\nSourceType == \"M\"\r\nand\r\nPartitions.Any(\r\nRegex.IsMatch(Expression,\"(?i)Binary\\.Decompress\\s*\\(\\s*Binary\\.FromText\")\r\n)\r\n",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "RELACIONAMENTO_FATO_FATO",
    "Name": "14. Relacionamento de Fato para Fato",
    "Category": "04.Relacionamentos",
    "Description": "Evite relacionamento entre fato utilize as tabelas dimensões para isso para isso",
    "Severity": 5,
    "Scope": "Relationship",
    "Expression": "FromTable.Name.StartsWith(\"f\") and ToTable.Name.StartsWith(\"f\")",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "RELACIONAMENTO_MUITOS_MUITOS",
    "Name": "15. Possui Relacionamentos Muitos para Muitos",
    "Category": "04.Relacionamentos",
    "Description": "Evite relacionamentos de muitos para muitos",
    "Severity": 3,
    "Scope": "Relationship",
    "Expression": "FromCardinality == \"Many\"\n and ToCardinality == \"Many\"",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "RELACIONAMENTO_BI_DIRECIONAL",
    "Name": "16. Relacionamento Bi-Direcional",
    "Category": "04.Relacionamentos",
    "Description": "Evite relacionamentos bi-direcionais, o ideal é sempre utilizar relacionamentos unidirecionais",
    "Severity": 3,
    "Scope": "Relationship",
    "Expression": "CrossFilteringBehavior == CrossFilteringBehavior.BothDirections and !(FromCardinality == \"One\" and ToCardinality == \"One\")",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "ITERADORA_NA_TABELA",
    "Name": "18.1 Medida Iteradora Rodando na Tabela Inteira",
    "Category": "05.Medidas",
    "Description": "Evite utilizar iteradora para rodar o calculo em cima da tabela inteira, isso deixa a execução da medida mais pesada",
    "Severity": 5,
    "Scope": "Measure, CalculatedColumn, CalculationItem",
    "Expression": "RegEx.IsMatch(Expression,\"(?i)SUMX\\s*\\(\\s*\\'*[A-Za-z0-9À-ÿ _]+'*\\s*,\\s*\\'*[A-Za-z0-9À-ÿ _]+\\'*\\[[A-Za-z0-9À-ÿ _]+\\]\")\r\nor\r\nRegEx.IsMatch(Expression,\"(?i)SUMX\\s*\\(\\s*\\'*[A-Za-z0-9À-ÿ _]+\\'*,\\s*\\'*[A-Za-z0-9À-ÿ _]\")\r\n\r\nor\r\nRegEx.IsMatch(Expression,\"(?i)AVERAGEX\\s*\\(\\s*\\'*[A-Za-z0-9À-ÿ _]+'*\\s*,\\s*\\'*[A-Za-z0-9À-ÿ _]+\\'*\\[[A-Za-z0-9À-ÿ _]+\\]\")\r\nor\r\nRegEx.IsMatch(Expression,\"(?i)AVERAGEX\\s*\\(\\s*\\'*[A-Za-z0-9À-ÿ _]+\\'*,\\s*\\'*[A-Za-z0-9À-ÿ _]\")\r\n\r\nor\r\nRegEx.IsMatch(Expression,\"(?i)COUNTX\\s*\\(\\s*\\'*[A-Za-z0-9À-ÿ _]+'*\\s*,\\s*\\'*[A-Za-z0-9À-ÿ _]+\\'*\\[[A-Za-z0-9À-ÿ _]+\\]\")\r\nor\r\nRegEx.IsMatch(Expression,\"(?i)COUNTX\\s*\\(\\s*\\'*[A-Za-z0-9À-ÿ _]+\\'*,\\s*\\'*[A-Za-z0-9À-ÿ _]\")\r\n\r\nor\r\nRegEx.IsMatch(Expression,\"(?i)COUNTAX\\s*\\(\\s*\\'*[A-Za-z0-9À-ÿ _]+'*\\s*,\\s*\\'*[A-Za-z0-9À-ÿ _]+\\'*\\[[A-Za-z0-9À-ÿ _]+\\]\")\r\nor\r\nRegEx.IsMatch(Expression,\"(?i)COUNTAX\\s*\\(\\s*\\'*[A-Za-z0-9À-ÿ _]+\\'*,\\s*\\'*[A-Za-z0-9À-ÿ _]\")\r\n\r\nor\r\nRegEx.IsMatch(Expression,\"(?i)MAXX\\s*\\(\\s*\\'*[A-Za-z0-9À-ÿ _]+'*\\s*,\\s*\\'*[A-Za-z0-9À-ÿ _]+\\'*\\[[A-Za-z0-9À-ÿ _]+\\]\")\r\nor\r\nRegEx.IsMatch(Expression,\"(?i)MAXX\\s*\\(\\s*\\'*[A-Za-z0-9À-ÿ _]+\\'*,\\s*\\'*[A-Za-z0-9À-ÿ _]\")\r\n\r\nor\r\nRegEx.IsMatch(Expression,\"(?i)MINX\\s*\\(\\s*\\'*[A-Za-z0-9À-ÿ _]+'*\\s*,\\s*\\'*[A-Za-z0-9À-ÿ _]+\\'*\\[[A-Za-z0-9À-ÿ _]+\\]\")\r\nor\r\nRegEx.IsMatch(Expression,\"(?i)MINX\\s*\\(\\s*\\'*[A-Za-z0-9À-ÿ _]+\\'*,\\s*\\'*[A-Za-z0-9À-ÿ _]\")\r\n\r\nor\r\nRegEx.IsMatch(Expression,\"(?i)PRODUCTX\\s*\\(\\s*\\'*[A-Za-z0-9À-ÿ _]+'*\\s*,\\s*\\'*[A-Za-z0-9À-ÿ _]+\\'*\\[[A-Za-z0-9À-ÿ _]+\\]\")\r\nor\r\nRegEx.IsMatch(Expression,\"(?i)PRODUCTX\\s*\\(\\s*\\'*[A-Za-z0-9À-ÿ _]+\\'*,\\s*\\'*[A-Za-z0-9À-ÿ _]\")\r\n\r\nor\r\nRegEx.IsMatch(Expression,\"(?i)PERCENTILEX.EXC\\s*\\(\\s*\\'*[A-Za-z0-9À-ÿ _]+'*\\s*,\\s*\\'*[A-Za-z0-9À-ÿ _]+\\'*\\[[A-Za-z0-9À-ÿ _]+\\]\")\r\nor\r\nRegEx.IsMatch(Expression,\"(?i)PERCENTILEX.EXC\\s*\\(\\s*\\'*[A-Za-z0-9À-ÿ _]+\\'*,\\s*\\'*[A-Za-z0-9À-ÿ _]\")\r\n\r\nor\r\nRegEx.IsMatch(Expression,\"(?i)PERCENTILEX.INC\\s*\\(\\s*\\'*[A-Za-z0-9À-ÿ _]+'*\\s*,\\s*\\'*[A-Za-z0-9À-ÿ _]+\\'*\\[[A-Za-z0-9À-ÿ _]+\\]\")\r\nor\r\nRegEx.IsMatch(Expression,\"(?i)PERCENTILEX.INC\\s*\\(\\s*\\'*[A-Za-z0-9À-ÿ _]+\\'*,\\s*\\'*[A-Za-z0-9À-ÿ _]\")\r\n\r\nor\r\nRegEx.IsMatch(Expression,\"(?i)CONCATENATEX\\s*\\(\\s*\\'*[A-Za-z0-9À-ÿ _]+'*\\s*,\\s*\\'*[A-Za-z0-9À-ÿ _]+\\'*\\[[A-Za-z0-9À-ÿ _]+\\]\")\r\nor\r\nRegEx.IsMatch(Expression,\"(?i)CONCATENATEX\\s*\\(\\s*\\'*[A-Za-z0-9À-ÿ _]+\\'*,\\s*\\'*[A-Za-z0-9À-ÿ _]\")\r\n\r\nor\r\nRegEx.IsMatch(Expression,\"(?i)MEDIANX\\s*\\(\\s*\\'*[A-Za-z0-9À-ÿ _]+'*\\s*,\\s*\\'*[A-Za-z0-9À-ÿ _]+\\'*\\[[A-Za-z0-9À-ÿ _]+\\]\")\r\nor\r\nRegEx.IsMatch(Expression,\"(?i)MEDIANX\\s*\\(\\s*\\'*[A-Za-z0-9À-ÿ _]+\\'*,\\s*\\'*[A-Za-z0-9À-ÿ _]\")\r\n\r\nor\r\nRegEx.IsMatch(Expression,\"(?i)RANKX\\s*\\(\\s*\\'*[A-Za-z0-9À-ÿ _]+'*\\s*,\\s*\\'*[A-Za-z0-9À-ÿ _]+\\'*\\[[A-Za-z0-9À-ÿ _]+\\]\")\r\nor\r\nRegEx.IsMatch(Expression,\"(?i)RANKX\\s*\\(\\s*\\'*[A-Za-z0-9À-ÿ _]+\\'*,\\s*\\'*[A-Za-z0-9À-ÿ _]\")\r\n\r\nor\r\nRegEx.IsMatch(Expression,\"(?i)ADDCOLUMNS\\s*\\(\\s*\\'*[A-Za-z0-9À-ÿ _]+'*\\s*,\\s*\\'*[A-Za-z0-9À-ÿ _]+\\'*\\[[A-Za-z0-9À-ÿ _]+\\]\")\r\nor\r\nRegEx.IsMatch(Expression,\"(?i)ADDCOLUMNS\\s*\\(\\s*\\'*[A-Za-z0-9À-ÿ _]+\\'*,\\s*\\'*[A-Za-z0-9À-ÿ _]\")",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "FILTER_SINTAX_INADEQUADA",
    "Name": "18.2 FILTER com Sintaxe Inadequada",
    "Category": "05.Medidas",
    "Description": "Em vez de usar este padrão FILTER('Table','Table'[Column]=\"Value\") para os parâmetros de filtro de uma função CALCULATE ou CALCULATETABLE, use uma das opções abaixo. Para saber se deve usar a função KEEPFILTERS, consulte o segundo link de referência abaixo.\r\n\r\nOption 1: FILTER(VALUES('Table'[Column]),[Measure] > Value)\r\nOption 2: FILTER(ALL('Table'[Column]),[Measure] > Value)\r\n\r\nReference: https://docs.microsoft.com/power-bi/guidance/dax-avoid-avoid-filter-as-filter-argument",
    "Severity": 5,
    "Scope": "Measure, CalculatedColumn, CalculationItem",
    "Expression": "RegEx.IsMatch(Expression,\"(?i)CALCULATE\\s*\\(\\s*[^,]+,\\s*(?i)FILTER\\s*\\(\\s*\\'*[A-Za-z0-9À-ÿ _]+'*\\s*,\\s*\\'*[A-Za-z0-9À-ÿ _]+\\'*\\[[A-Za-z0-9À-ÿ _]+\\]\")\r\nor\r\nRegEx.IsMatch(Expression,\"(?i)CALCULATETABLE\\s*\\([^,]*,\\s*(?i)FILTER\\s*\\(\\s*\\'*[A-Za-z0-9À-ÿ _]+\\'*,\\s*\\'*[A-Za-z0-9À-ÿ _]+\\'*\\[[A-Za-z0-9À-ÿ _]+\\]\")",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "EVITE_VALUES_DISTINCT_TABELA",
    "Name": "18.3 Evite VALUES ou DISTINCT da Tabela Inteira",
    "Category": "05.Medidas",
    "Description": "Evite rodar a função VALUES ou DISTINCT da tabela inteira ao invés disso referecie somente a coluna necessária, caso precise refereciar 2 colunas ou mais utilize a função SUMMARIZE",
    "Severity": 3,
    "Scope": "Measure",
    "Expression": "RegEx.IsMatch(\r\n  RegEx.Replace(\r\n     Expression,\r\n     \"(?is)(?:COUNTROWS\\s*\\(\\s*VALUES|COUNTROWS\\s*\\(\\s*DISTINCT|,\\s*VALUES|,\\s*DISTINCT)\",\r\n     \"\"\r\n  ),\r\n  \"(?is)(?:VALUES|DISTINCT)\\s*\\(\\s*['A-Za-z0-9À-ÿ_\\s]*\\s*\\)\"\r\n)",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "DIVIDE",
    "Name": "19. DIVIDE ao invés de \"/\"",
    "Category": "05.Medidas",
    "Description": "Utilizar a função DIVIDE ao invés da \"/\"\r\n\r\nhttps://learn.microsoft.com/pt-br/dax/best-practices/dax-divide-function-operator",
    "Severity": 2,
    "Scope": "Measure, CalculatedColumn, CalculationItem",
    "Expression": "(\r\nRegEx.IsMatch(Expression.Replace(\"/*\",\"\").Replace(\"*/\",\"\").Replace(\"//\",\"\"),\"\\]\\s*\\/(?!\\/)(?!\\*)\")\r\nor\r\nRegEx.IsMatch(Expression.Replace(\"/*\",\"\").Replace(\"*/\",\"\").Replace(\"//\",\"\"),\"\\)\\s*\\/(?!\\/)(?!\\*)\")\r\n)\r\nand\r\n!Table.Name.StartsWith(\"DateTableTemplate_\") \n\r\nand\r\n\n\n!Table.Name.StartsWith(\"LocalDateTable_\")",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "EVITAR_IFERROR_ISERROR",
    "Name": "20. Evitar a função IFERROR e ISERROR",
    "Category": "05.Medidas",
    "Description": "Não utilize as funções IFERROR e ISERROR, ao invés disso deve ser feito a correção do DAX para a função não retornar erro.\r\n\r\nhttps://learn.microsoft.com/pt-br/dax/best-practices/dax-error-functions#recommendations",
    "Severity": 3,
    "Scope": "Measure",
    "Expression": "RegEx.IsMatch(Expression,\"(?i)IFERROR\\s*\\(\")\r\nor\r\nRegEx.IsMatch(Expression,\"(?i)ISERROR\\s*\\(\")",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "EVITAR_COUNT_COUNTA_COUNTBLANK",
    "Name": "21. COUNTROWS ao invés de COUNT, COUNTA or COUNTBLANK",
    "Category": "05.Medidas",
    "Description": "Evitar a utilização da funções COUNT, COUNTA and COUNTBLANK aos invés do COUNTROWS\r\n\r\nhttps://learn.microsoft.com/pt-br/dax/best-practices/dax-countrows",
    "Severity": 3,
    "Scope": "Measure",
    "Expression": "RegEx.IsMatch(RegEx.Replace(Expression,\"(?i)(?:--.*?$|\\/\\/.*?$|--.*?\\n|\\/\\/.*?\\n|(?s)\\/\\*.*?\\*\\/|DISTINCTCOUNT)\",\"\"),\"(?i)(?:COUNTA\\s*\\(|COUNTBLANK\\s*\\(|COUNT\\s*\\()\")\r\nor\r\n(\r\nRegex.IsMatch(RegEx.Replace(Expression,\"(?:--.*?$|\\/\\/.*?$|--.*?\\n|\\/\\/.*?\\n|(?s)\\/\\*.*?\\*\\/)\",\"\"), \"(?i)COUNTX\\s*\\((?:[^[\\]]|\\[[^\\]]*\\])*,\")\r\nand\r\nRegex.IsMatch(RegEx.Replace(Expression,\"(?:--.*?$|\\/\\/.*?$|--.*?\\n|\\/\\/.*?\\n|(?s)\\/\\*.*?\\*\\/)\",\"\"), \"(?i)\\,[^\\)]*\\[.*?\\][^\\)]*\\)\")\r\n)\r\nor\r\n(\r\nRegex.IsMatch(RegEx.Replace(Expression,\"(?:--.*?$|\\/\\/.*?$|--.*?\\n|\\/\\/.*?\\n|(?s)\\/\\*.*?\\*\\/)\",\"\"), \"(?i)COUNTAX\\s*\\((?:[^[\\]]|\\[[^\\]]*\\])*,\")\r\nand\r\nRegex.IsMatch(RegEx.Replace(Expression,\"(?:--.*?$|\\/\\/.*?$|--.*?\\n|\\/\\/.*?\\n|(?s)\\/\\*.*?\\*\\/)\",\"\"), \"(?i)\\,[^\\)]*\\[.*?\\][^\\)]*\\)\")\r\n)",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "REFERENCIOU_A_MESMA_MEDIDA",
    "Name": "22.01 Referenciou Mesma Medida ao Invés de usar Variável",
    "Category": "05.Medidas",
    "Description": "As colunas usadas em um relacionamento devem ser do mesmo tipo de dados",
    "Severity": 4,
    "Scope": "Measure",
    "Expression": "RegEx.IsMatch(Regex.Replace(Regex.Replace(Expression, \"\\r\\n?|\\n\", \" \"),\"CALCULATE\\s*\\(\\s*\\[(?:(?!\\,).)*,\", \"\"), \"(?i)[^A-Za-z0-9À-ÿ']\\[([^\\]]+)\\].*?[^A-Za-z0-9À-ÿ']\\[\\1\\]\")\r\nand\r\n!RegEx.IsMatch(Expression,\"(?i)(:?SUMX|COUNTX|TOPN|AVERAGEX|COUNTAX|MAXX|MINX|PRODUCTX|PERCENTILEX.EXC|PERCENTILEX.INC|CONCATENATEX|MEDIANX|TOPN|RANKX|ADDCOLUMNS)\")",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "VARIAVEL_AVERAGE",
    "Name": "22.02 Utilizar Várivel para o AVERAGE",
    "Category": "05.Medidas",
    "Description": "Referenciado o mesmo calculo com AVERAGE",
    "Severity": 3,
    "Scope": "Measure",
    "Expression": "RegEx.IsMatch(Regex.Replace(Regex.Replace(Expression, \"\\r\\n?|\\n\", \" \"),\"CALCULATE\\s*\\(\\s*(?:(?!\\,).)*,\", \"\"), \"AVERAGE\\s*\\(([^\\]]+)\\].*?\\(\\1\\]\")",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "VARIAVEL_COUNTA",
    "Name": "22.03 Utilizar Várivel para o COUNTA",
    "Category": "05.Medidas",
    "Description": "Referenciado o mesmo calculo com COUNTA",
    "Severity": 3,
    "Scope": "Measure",
    "Expression": "RegEx.IsMatch(Regex.Replace(Regex.Replace(Expression, \"\\r\\n?|\\n\", \" \"),\"CALCULATE\\s*\\(\\s*(?:(?!\\,).)*,\", \"\"), \"COUNTA\\s*\\(([^\\]]+)\\].*?\\(\\1\\]\")",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "VARIAVEL_COUNTROWS",
    "Name": "22.04 Utilizar Várivel para o COUNTROWS",
    "Category": "05.Medidas",
    "Description": "Referenciado o mesmo calculo com COUNTROWS",
    "Severity": 3,
    "Scope": "Measure",
    "Expression": "RegEx.IsMatch(Regex.Replace(Regex.Replace(Expression, \"\\r\\n?|\\n\", \" \"),\"CALCULATE\\s*\\(\\s*(?:(?!\\,).)*,\", \"\"), \"COUNTROWS\\s*\\(([^\\]]+)\\).*?COUNTROWS\\s*\\(\\1\\)\")",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "VARIAVEL_DISTINCT",
    "Name": "22.05 Utilizar Várivel para o DISTINCT",
    "Category": "05.Medidas",
    "Description": "Referenciado o mesmo calculo com DISTINCT",
    "Severity": 3,
    "Scope": "Measure",
    "Expression": "RegEx.IsMatch(Regex.Replace(Regex.Replace(Expression, \"(?i)(?:--.*?$|\\/\\/.*?$|--.*?\\n|\\/\\/.*?\\n|(?s)\\/\\*.*?\\*\\/)\", \"\"), \"CALCULATETABLE\\s*\\(\\s*(?:(?!\\,).)*,\", \"\"), \"(?is)DISTINCT\\s*\\(\\s*([^\\)]+)\\s*\\).*?DISTINCT\\s*\\(\\s*\\1\\s*\\)\")",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "VARIAVEL_MAX",
    "Name": "22.06 Utilizar Várivel para o MAX",
    "Category": "05.Medidas",
    "Description": "Referenciado o mesmo calculo com MAX",
    "Severity": 3,
    "Scope": "Measure",
    "Expression": "RegEx.IsMatch(Regex.Replace(Regex.Replace(Expression, \"\\r\\n?|\\n\", \" \"),\"CALCULATE\\s*\\(\\s*(?:(?!\\,).)*,\", \"\"), \"MAX\\s*\\(([^\\]]+)\\].*?MAX\\s*\\(\\1\\]\")",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "VARIAVEL_MAXA",
    "Name": "22.07 Utilizar Várivel para o MAXA",
    "Category": "05.Medidas",
    "Description": "Referenciado o mesmo calculo com MAXA",
    "Severity": 3,
    "Scope": "Measure",
    "Expression": "RegEx.IsMatch(Regex.Replace(Regex.Replace(Expression, \"\\r\\n?|\\n\", \" \"),\"CALCULATE\\s*\\(\\s*(?:(?!\\,).)*,\", \"\"), \"MAXA\\s*\\(([^\\]]+)\\].*?MAXA\\s*\\(\\1\\]\")",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "VARIAVEL_MIN",
    "Name": "22.08 Utilizar Várivel para o MIN",
    "Category": "05.Medidas",
    "Description": "Referenciado o mesmo calculo com MIN",
    "Severity": 3,
    "Scope": "Measure",
    "Expression": "RegEx.IsMatch(Regex.Replace(Regex.Replace(Expression, \"\\r\\n?|\\n\", \" \"),\"CALCULATE\\s*\\(\\s*(?:(?!\\,).)*,\", \"\"), \"MIN\\s*\\(([^\\]]+)\\].*?MIN\\s*\\(\\1\\]\")",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "VARIAVEL_MINA",
    "Name": "22.09 Utilizar Várivel para o MINA",
    "Category": "05.Medidas",
    "Description": "Referenciado o mesmo calculo com MINA",
    "Severity": 3,
    "Scope": "Measure",
    "Expression": "RegEx.IsMatch(Regex.Replace(Regex.Replace(Expression, \"\\r\\n?|\\n\", \" \"),\"CALCULATE\\s*\\(\\s*(?:(?!\\,).)*,\", \"\"), \"MINA\\s*\\(([^\\]]+)\\].*?MINA\\s*\\(\\1\\]\")",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "VARIAVEL_COUNT_DISTINCTCOUNT",
    "Name": "22.10 Utilizar Várivel para o COUNT ou DISTINCTCOUNT",
    "Category": "05.Medidas",
    "Description": "Referenciado o mesmo calculo com COUNTou DISTINCTCOUNT",
    "Severity": 3,
    "Scope": "Measure",
    "Expression": "RegEx.IsMatch(Regex.Replace(Regex.Replace(Expression, \"(?:--.*?$|\\/\\/.*?$|--.*?\\n|\\/\\/.*?\\n|(?s)\\/\\*.*?\\*\\/)\", \"\"),\"(?is)CALCULATE\\s*\\(\\s*(?:(?!\\,).)*,\", \"\"), \"(?is)COUNT\\s*\\(\\s*([^\\]]+)\\].*?COUNT\\s*\\(\\s*\\1\\]\")\r\n",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "VARIAVEL_SUM",
    "Name": "22.11 Utilizar Várivel para o SUM",
    "Category": "05.Medidas",
    "Description": "Referenciado o mesmo calculo com SUM",
    "Severity": 3,
    "Scope": "Measure",
    "Expression": "RegEx.IsMatch(Regex.Replace(Regex.Replace(Expression, \"\\r\\n?|\\n\", \" \"),\"CALCULATE\\s*\\(\\s*(?:(?!\\,).)*,\", \"\"), \"SUM\\s*\\(([^\\]]+)\\].*?SUM\\s*\\(\\1\\]\")",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "VARIAVEL_VALUES",
    "Name": "22.12 Utilizar Várivel para o VALUES",
    "Category": "05.Medidas",
    "Description": "Referenciado o mesmo calculo com VALUES",
    "Severity": 3,
    "Scope": "Measure",
    "Expression": "RegEx.IsMatch(Regex.Replace(Regex.Replace(Expression, \"(?i)(?:--.*?$|\\/\\/.*?$|--.*?\\n|\\/\\/.*?\\n|(?s)\\/\\*.*?\\*\\/)\", \"\"), \"CALCULATETABLE\\s*\\(\\s*(?:(?!\\,).)*,\", \"\"), \"(?is)VALUES\\s*\\(\\s*([^\\)]+)\\s*\\).*?VALUES\\s*\\(\\s*\\1\\s*\\)\")",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "EVITE_'(X/Y)-1'",
    "Name": "23. '(X/Y)-1' ao inves (X-Y)/Y",
    "Category": "05.Medidas",
    "Description": "Evite: SUM ( 'Sales'[CostAmount] ) / SUM( 'Sales'[SalesAmount] ) - 1\r\nMelhor:\r\nVAR SALES = SUM ( 'Sales'[SalesAmount] ) \r\nDIVIDE ( SALES - SUM ( 'Sales'[CostAmount] ), SALES  )",
    "Severity": 2,
    "Scope": "Measure, CalculatedColumn, CalculationItem",
    "Expression": "RegEx.IsMatch(Regex.Replace(Expression, \"(?:--.*?$|\\/\\/.*?$|--.*?\\n|\\/\\/.*?\\n|(?s)\\/\\*.*?\\*\\/)\", \"\"), \"(?i)DIVIDE\\s*\\(.*\\)\\s*[+-]\\s*\\d\")\r\n",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "MARCAR_TABELA_DATA",
    "Name": "25. Marcar a dCalendario Como Tabela de Data",
    "Category": "06.Opções/Configurações",
    "Description": "Deve ser marcado a tabela de calendario utilizada no modelo como tabela de data",
    "Severity": 2,
    "Scope": "Table, CalculatedTable",
    "Expression": "\r\n!Name.StartsWith(\"f\")\r\nand\r\n(\r\nDataCategory <> \"Time\"\r\nor\r\nColumns.Any(IsKey == true and DataType == \"DateTime\") == false\r\n)\r\nand\r\n(\r\nUsedInRelationships.Any(FromColumn.DataType.ToString() == \"DateTime\" and current.Name == FromTable.Name and FromCardinality == \"One\" and CrossFilteringBehavior == CrossFilteringBehavior.OneDirection)\r\nor\r\n\n\n\nUsedInRelationships.Any(ToColumn.DataType.ToString() == \"DateTime\" and current.Name == ToTable.Name and ToCardinality == \"One\" and CrossFilteringBehavior == CrossFilteringBehavior.OneDirection)\n\r\n)",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "Desativar_Data_Hora_Automática",
    "Name": "26. Desativar Data/Hora Automática",
    "Category": "06.Opções/Configurações",
    "Description": "Deve ser desabilitado a função Data/Hora Aultomática no Power BI",
    "Severity": 4,
    "Scope": "Table, CalculatedTable",
    "Expression": "ObjectTypeName == \"Calculated Table\"\n\r\nand\r\n(\r\n\n(\nName.StartsWith(\"DateTableTemplate_\") \n\nor \n\nName.StartsWith(\"LocalDateTable_\")\n)\r\nor\r\nHasAnnotation(\"__PBI_LocalDateTable\")\r\n)",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "PREFIXO_FATO_DIMENSAO",
    "Name": "27. Tabelas Devem ter Prefixo \"d\" para Dimensões e \"f\" fara Fatos",
    "Category": "07.Nomenclatura",
    "Description": "As tabelas devem ter prefixo \"d\" para dimensões e \"f\" fara fatos",
    "Severity": 1,
    "Scope": "Table",
    "Expression": "!Name.StartsWith(\"f\") \r\nand\r\n!Name.StartsWith(\"F\")\r\nand\r\n!Name.StartsWith(\"d\")\r\nand\r\n!Name.StartsWith(\"D\")\r\nand\r\nUsedInRelationships.Any() == true",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "USERELATIONSHIP_TABELA_COM_RLS",
    "Name": "[EXTRA] Evite USERELATIONSHIP em Tabelas com Filtro de RLS",
    "Category": "Extras",
    "Description": "Não utilize a função USERELATIONSHIP em tabelas com RLS aplicado, pois não funcionam como esperado.\r\n",
    "Severity": 5,
    "Scope": "Table, CalculatedTable",
    "Expression": "\r\nModel.AllMeasures.Any(RegEx.IsMatch(Expression,\"(?i)USERELATIONSHIP\\s*\\(\\s*.+?(?=])\\]\\s*,\\s*'*\\ + current.Name + \\'*\\[\"))\r\nand\r\nRowLevelSecurity.Any(it <> null)",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "BRONZE_SANDBOX",
    "Name": "[EXTRA] Consulta Utiliza Sandbox",
    "Category": "Extras",
    "Description": "Tabelas quem utilizam dados das tabelas Sandbox não são sustentaveis",
    "Severity": 5,
    "Scope": "Table",
    "Expression": "(\r\nEnableRefreshPolicy = true\r\nand\r\nSourceExpression.IndexOf(\"db_group\", StringComparison.OrdinalIgnoreCase) >= 0\r\n)\r\n\r\nor\r\n\r\n(\r\nEnableRefreshPolicy = false\r\nand\r\nPartitions.Any(\r\nExpression.IndexOf(\"db_group\", StringComparison.OrdinalIgnoreCase) >= 0\r\n)\r\n)",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "EVITE_CONTAINSSTRING",
    "Name": "[EXTRA] Evite CONTAINSSTRING",
    "Category": "Extras",
    "Description": "Ao invés de utilizar a função CONTAINSSTRING crie uma coluna para classificar se a linha contém a informação desejada",
    "Severity": 4,
    "Scope": "Measure",
    "Expression": "Expression.Contains(\"CONTAINSSTRING\")",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "RELACIONAMENTO_1_1_FATO_DIMENSAO",
    "Name": "[EXTRA] Relacionamento 1:1 entre Fato e Dimensão está Correto?",
    "Category": "Extras",
    "Description": "Relacionamento entre fato e dimensão deveria ser 1 para muitos, ou você feito o relacionamento incorreto ou na verdade são tabelas dimensões",
    "Severity": 2,
    "Scope": "Relationship",
    "Expression": "(FromTable.Name.StartsWith(\"d\") and ToTable.Name.StartsWith(\"f\") and ToCardinality == \"One\" and FromCardinality == \"One\")\r\nor\r\n(FromTable.Name.StartsWith(\"f\") and ToTable.Name.StartsWith(\"d\") and ToCardinality == \"One\" and FromCardinality == \"One\")",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "FONTE_DADOS_SEM_HOMOLOGACAO",
    "Name": "[EXTRA] Utiliza Fonte Dados sem Homologação",
    "Category": "Extras",
    "Description": "Tabela possui fonte de dados não homolagadas como Sharepoint, Excel, Web.Contents e ODBC",
    "Severity": 5,
    "Scope": "Table",
    "Expression": "EnableRefreshPolicy = false\r\nand\r\nPartitions.Any(\r\nRegex.IsMatch(Expression, \"(?:SharePoint\\.Files\\(|SharePoint\\.Contents\\(|SharePoint\\.Tables\\(|Excel\\.Workbook\\(|Web\\.Contents\\(|Web\\.Headers\\(|Web\\.Page\\(|CommonDataService\\.Database\\()|Odbc\\.\")\r\n)",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "CALENDARIO_RELACIONADA_DATA_CARGA",
    "Name": "[EXTRA] Calendario Relacionada com Data de Carga",
    "Category": "Extras",
    "Description": "Não faz sentido relacionar a calendario com a data de carga, além de remover o relacionamento entender a data de carga está sendo utilizada no relatório para ser removida",
    "Severity": 2,
    "Scope": "Relationship",
    "Expression": "(\r\nToColumn.Name.ToLower() == \"data_carga\"\r\nor\r\nFromColumn.Name.ToLower() == \"data_carga\"\r\nor\r\nToColumn.Name.ToLower() == \"data_hora_carga\"\r\nor\r\nFromColumn.Name.ToLower() == \"data_hora_carga\"\r\n)\r\nand \r\n!(ToTable\n.Name.StartsWith(\"DateTableTemplate_\") \n\nor ToTable.\nName.StartsWith(\"LocalDateTable_\")\n)\r\nand \r\n!(FromTable.Name.StartsWith(\"DateTableTemplate_\") \n\nor FromTable.Name.StartsWith(\"LocalDateTable_\")\n)",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "TABELA_NAO_ESTA_NO_MODO_IMPORT",
    "Name": "[EXTRA] Tabela Não Está no Modo Import",
    "Category": "Extras",
    "Description": "Evite deixar as tabelas no modo que não seja \"import\"",
    "Severity": 5,
    "Scope": "Partition",
    "Expression": "Mode != \"Import\"",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "INCREMENTAL_DIA_MES",
    "Name": "[EXTRA] Avaliar Incremental de Dia para Mês",
    "Category": "Extras",
    "Description": "Avaliar se é mais performatico atualização incremental por mês ao invés de fazer do dia",
    "Severity": 4,
    "Scope": "Table",
    "Expression": "EnableRefreshPolicy = true\r\nand\r\nIncrementalGranularity = \"Day\"\r\nand\r\nIncrementalPeriods > 7",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "INCREMENTAL_HISTORICO",
    "Name": "[EXTRA] Historico da Incremental Maior que 5 Anos",
    "Category": "Extras",
    "Description": "Verificar se realmente é necessário manter um histórico maior que 5 anos de dados",
    "Severity": 4,
    "Scope": "Table",
    "Expression": "EnableRefreshPolicy = true\r\nand\r\nRollingWindowGranularity = \"YEAR\"\r\nand\r\nRollingWindowPeriods > 5",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "ORDER_BY_CONSULTA_SQL",
    "Name": "[EXTRA] Evite ORDER BY da Consulta SQL",
    "Category": "Extras",
    "Description": "A função de ORDER BY deixa a consulta SQL muito pesada é recomendavel não utilizar essa função em tabelas principamente em tabelas fatos",
    "Severity": 5,
    "Scope": "Table",
    "Expression": "(\r\nEnableRefreshPolicy = true\r\nand\r\nRegex.IsMatch(Regex.Replace(SourceExpression,\"(?is)(?:PARTITION\\s*BY.*?ORDER\\s*BY|row_number.*?ORDER\\s*BY|OVER\\s*\\(\\s*ORDER\\s*BY|--.*?\\#\\(lf\\)|--.*?\\n)\",\"\"),\"(?is)ORDER\\s*BY\")\r\n)\r\n\r\nor\r\n\r\n(\r\nEnableRefreshPolicy = false\r\nand\r\nPartitions.Any(\r\nRegex.IsMatch(Regex.Replace(Expression,\"(?is)(?:PARTITION\\s*BY.*?ORDER\\s*BY|row_number.*?ORDER\\s*BY|OVER\\s*\\(\\s*ORDER\\s*BY|--.*?\\#\\(lf\\)|--.*?\\n)\",\"\"),\"(?is)ORDER\\s*BY\")\r\n)\r\n)",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "REMOVER_DATA_CARGA_FATO_DIMENSAO",
    "Name": "[EXTRA] Remover Data Carga da Fato ou Dimensão",
    "Category": "Extras",
    "Description": "Crie uma tabela auxiliar para retornar a ultima data de carga em uma linha",
    "Severity": 2,
    "Scope": "Table",
    "Expression": "Columns.Count() > 2\r\nand\r\nColumns.Any(Name.ToUpper() = \"DATA_HORA_CARGA\" or Name.ToUpper() = \"DATA_CARGA\")",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "EVITE_MEDIDA_DUPLICADA",
    "Name": "[EXTRA] Medidas com mesmo DAX",
    "Category": "Extras",
    "Description": "Encontrado medidas com o nome diferente, mas que possuem a mesma expresão DAX",
    "Severity": 1,
    "Scope": "Measure",
    "Expression": "Model.AllMeasures.Any(Expression.Replace(\" \",\"\").Replace(\"\\n\",\"\").Replace(\"\\r\",\"\").Replace(\"\\t\",\"\") = outerIt.Expression.Replace(\" \",\"\").Replace(\"\\n\",\"\").Replace(\"\\r\",\"\").Replace(\"\\t\",\"\") and it <> outerIt)",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "[EXTRA]_EVITE_MODELAGEM_SNOW_FLAKE",
    "Name": "[EXTRA] Evite Modelagem Snow Flake",
    "Category": "Extras",
    "Description": "Utilize preferenciamente a modelagem Star Schema\r\nReferência: https://docs.microsoft.com/power-bi/guidance/star-schema",
    "Severity": 2,
    "Scope": "Table, CalculatedTable",
    "Expression": "UsedInRelationships.Any(current.Name == FromTable.Name)\r\nand\r\nUsedInRelationships.Any(current.Name == ToTable.Name)",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "EVITE_CALCULATE_MEDIDA",
    "Name": "[EXTRA] Evite CALCULATE([Medida])",
    "Category": "Extras",
    "Description": "Quando você referência uma medida exemplo [Qtd de Vendas] implicitamente o DAX já adiciona uma função CALCULATE, com isso não é necessário colocar uma medida dentro de uma função CALCULATE se não for passar um filtro ou um modificador de contexto",
    "Severity": 1,
    "Scope": "Measure",
    "Expression": "RegEx.IsMatch(Expression,\"(?i)CALCULATE\\s*\\(\\s*\\[\\s*[A-Za-z0-9À-ÿ_ ]*\\]\\s*\\)\")\r\nor\r\nRegEx.IsMatch(Expression,\"(?i)(?:CALCULATE\\s*\\(\\s*DIVIDE\\s*\\(\\s*[[A-Za-z0-9À-ÿ _]+\\]\\s*,\\s*[[A-Za-z0-9À-ÿ _]+\\]\\s*\\)\\s*\\)|CALCULATE\\s*\\(\\s*DIVIDE\\s*\\(\\s*[[A-Za-z0-9À-ÿ _]+\\]\\s*,\\s*[[A-Za-z0-9À-ÿ _]+\\]\\s*,\\s*.*\\)\\s*\\))\")",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "EVITE_CALCULATE_SEM_FILTRO_OU_MODIFICADOR",
    "Name": "[EXTRA] Evite CALCULATE() sem Filtro ou Modificador de Contexto",
    "Category": "Extras",
    "Description": "Medidas agregadoras que não precisam ser filtradas ou adicionar um modificador de contexto, não precisam de adicionadas dentro de uma função CALCULATE\r\n\r\nCALCULATE(SUM(TABELA[Coluna])) --> SUM(TABELA[Coluna])\r\n\r\nCALCULATE(MAX(TABELA[Coluna])) --> MAX(TABELA[Coluna])",
    "Severity": 1,
    "Scope": "Measure",
    "Expression": "RegEx.IsMatch(Expression,\"(?i)CALCULATE\\s*\\(\\s*[A-Za-z0-9À-ÿ\\[\\]_\\( ]*\\)\\s*\\)\")\r\nand\r\n!RegEx.IsMatch(Expression,\"(?is)(?:SUMX|COUNTX|COUNTAX|AVERAGEX|MINX|MAXX|PRODUCTX|FILTER|TOPN|RANK)\")",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "DISTINCTCOUNT_SUMX_VALUES",
    "Name": "[EXTRA] DISTINCTCOUNT ao invés de SUMX(VALUES(tabela[Coluna]),1)",
    "Category": "Extras",
    "Description": "Para contar valores distintos utilize a função DISTINCTCOUNT \r\n\r\nRecomendado:\r\nDISTINCTCOUNT(TABELA[Coluna])\r\n\r\nEvitar:\r\nSUMX(VALUES(tabela[Coluna]),1)",
    "Severity": 3,
    "Scope": "Measure",
    "Expression": "RegEx.IsMatch(Expression,\"(?i)SUMX\\s*\\(\\s*(?:VALUES|DISTINCT)\\s*\\(\\s*'*[A-Za-z0-9À-ÿ _]+\\'*\\s*\\[[A-Za-z0-9À-ÿ _]+\\]\\s*\\)\\s*,\\s*1\\s*\\)\")",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "DISTINCTCOUNTNOBLANK_DISTINCTCOUNT_BLANK",
    "Name": "[EXTRA] DISTINCTCOUNTNOBLANK ao invés de DISTINCTCOUNT <> Blank()",
    "Category": "Extras",
    "Description": "Para contar valores distintos desconsiderando linhas em branco utilize a função DISTINCTCOUNT \r\n\r\nRecomendado:\r\nDISTINCTCOUNTNOBLANK(TABELA[Coluna])\r\n\r\nEvitar:\r\nCALCULATE(\r\n         DISTINCTCOUNT(Tabela[Coluna]),\r\n         Tabela[Coluna] <> Blank()\r\n)\r\n\r\nou \r\n\r\nCALCULATE(\r\n         DISTINCTCOUNT(Tabela[Coluna]),\r\n         Tabela[Coluna] <> 0\r\n)",
    "Severity": 3,
    "Scope": "Measure",
    "Expression": "RegEx.IsMatch(Expression,\"(?i)CALCULATE\\s*\\(\\s*DISTINCTCOUNT\\s*\\(\\s*'*[A-Za-z0-9À-ÿ _]+\\'*\\s*\\[[A-Za-z0-9À-ÿ _]+\\]\\s*\\)\\s*,\\s*'*[A-Za-z0-9À-ÿ _]+\\'*\\s*\\[[A-Za-z0-9À-ÿ _]+\\]\\s*<>\\s*(?:BLANK\\(\\s*\\)|0)\\s*\\)\")",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "RELACIONAMENTO_INATIVO_SEM _USO",
    "Name": "[EXTRA] Relacionamento Inativo não é utilizado",
    "Category": "Extras",
    "Description": "Modelo possuem relacionamentos inativos, mas não possuem uma USERELATIONSHIP para ativar ele",
    "Severity": 2,
    "Scope": "Relationship",
    "Expression": "IsActive == false\r\nand not\r\n(\r\nModel.AllMeasures.Any(RegEx.IsMatch(Expression,\r\n\"(?i)USERELATIONSHIP\\s*\\(\\s*\\'*\" +\r\ncurrent.FromTable.Name + \"\\'*\\[\" + \r\ncurrent.FromColumn.Name + \"\\]\\s*,\\s*\\'*\" +\r\ncurrent.ToTable.Name + \"\\'*\\[\" +\r\ncurrent.ToColumn.Name + \"\\]\")\r\n)\r\nor\r\nModel.AllMeasures.Any(RegEx.IsMatch(Expression,\r\n\"(?i)USERELATIONSHIP\\s*\\(\\s*\\'*\" +\r\ncurrent.ToTable.Name + \"\\'*\\[\" +\r\ncurrent.ToColumn.Name + \"\\]\\s*,\\s*\\'*\" +\r\ncurrent.FromTable.Name + \"\\'*\\[\" +\r\ncurrent.FromColumn.Name + \"\\]\")\r\n)\r\nor\r\nModel.AllCalculationItems.Any(RegEx.IsMatch(Expression,\r\n\"(?i)USERELATIONSHIP\\s*\\(\\s*\\'*\" +\r\ncurrent.ToTable.Name + \"\\'*\\[\" +\r\ncurrent.ToColumn.Name + \"\\]\\s*,\\s*\\'*\" +\r\ncurrent.FromTable.Name + \"\\'*\\[\" +\r\ncurrent.FromColumn.Name + \"\\]\")\r\n)\r\nor\r\nModel.AllCalculationItems.Any(RegEx.IsMatch(Expression,\r\n\"(?i)USERELATIONSHIP\\s*\\(\\s*\\'*\" +\r\ncurrent.FromTable.Name + \"\\'*\\[\" + \r\ncurrent.FromColumn.Name + \"\\]\\s*,\\s*\\'*\" +\r\ncurrent.ToTable.Name + \"\\'*\\[\" +\r\ncurrent.ToColumn.Name + \"\\]\")\r\n)\r\n)\r\n",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "TREATAS_INVES_VALUES_DISTINCT",
    "Name": "[EXTRA] TREATAS ao invés de Tabela[Coluna] IN VALUES ou DISTINCT",
    "Category": "Extras",
    "Description": "Utilize a função TREATAS ao invés de utilizar o IN VALUES ou IN DISTINCT\r\n\r\nEvitar:\r\nTabela1[Coluna1] IN VALUES(Tabela2[Coluna2])\r\nTabela1[Coluna1] IN DISTINCT(Tabela2[Coluna2])\r\n\r\nCorreto:\r\nTREATAS(VALUES(Tabela2[Coluna2]),Tabela1[Coluna1])\r\nTREATAS(DISTINCT(Tabela2[Coluna2]),Tabela1[Coluna1])",
    "Severity": 3,
    "Scope": "Measure",
    "Expression": "RegEx.IsMatch(Expression,\"(?is)[A-Za-z0-9À-ÿ _]+\\'*\\s*\\[[A-Za-z0-9À-ÿ _]+\\]\\s*IN\\s*(?:VALUES|DISTINCT)\")",
    "CompatibilityLevel": 1200
  }
]
