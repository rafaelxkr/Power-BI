[
  {
    "ID": "BANCO_DADOS_AUTORIZACAO",
    "Name": "01.1.Fonte de Dados não Aprovada",
    "Category": "01.Fonte de Dados",
    "Description": "Essa fonte de dados precisa de autorização, verique a documentação de fonte de dados aprovadas",
    "Severity": 5,
    "Scope": "Table",
    "Expression": "(\r\nEnableRefreshPolicy = true\r\nand\r\n!RegEx.IsMatch(SourceExpression,\"(?i)(\"\"https:\\/\\/powerbi-cloud-prod\\.alphaservesp\\.com\\/api\"\"|\"\"cpt-srvsqldw01\\\\dw\"\"|WMINCPTSQLDW01\\\\DW\"\"|WMINCPTCAS01\"\"|\"\"DATASTORE\"\"|\"\"192\\.168\\.26\\.10\\\\dwathena_uy\"\"|\"\"IKOL\"\"|\"\"(CPT-SRVSQLDW01\\\\DWMINERVA|WMINCPTSQLDW01\\\\DWMINERVA)\"\".*\"\"(dw|dw_refined)\"\"|\"\"172\\.25\\.2\\.178\"\".*\"\"dw_refined\"\"|syn-stargate-ondemand\\.sql\\.azuresynapse\\.net\"\".*\"\"syn-serverless\"\")\")\r\nand \r\nRegEx.IsMatch(SourceExpression,\"(Sql\\.Database|AnalysisServices\\.Database|OData\\.Feed|PostgreSQL\\.Database)\")\r\n)\r\n\r\nor\r\n\r\n(\r\nEnableRefreshPolicy = false\r\nand\r\nPartitions.Any(\r\n!RegEx.IsMatch(Expression,\"(?i)(\"\"https:\\/\\/powerbi-cloud-prod\\.alphaservesp\\.com\\/api\"\"|\"\"cpt-srvsqldw01\\\\dw\"\"|WMINCPTSQLDW01\\\\DW\"\"|WMINCPTCAS01\"\"|\"\"DATASTORE\"\"|\"\"192\\.168\\.26\\.10\\\\dwathena_uy\"\"|\"\"IKOL\"\"|\"\"(CPT-SRVSQLDW01\\\\DWMINERVA|WMINCPTSQLDW01\\\\DWMINERVA)\"\".*\"\"(dw|dw_refined)\"\"|\"\"172\\.25\\.2\\.178\"\".*\"\"dw_refined\"\"|syn-stargate-ondemand\\.sql\\.azuresynapse\\.net\"\".*\"\"syn-serverless\"\")\")\r\nand \r\nRegEx.IsMatch(Expression,\"(Sql\\.Database|AnalysisServices\\.Database|OData\\.Feed|PostgreSQL\\.Database)\")\r\n)\r\n)",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "BANCO_DADOS_AUTORIZACAO_2",
    "Name": "01.2.Fonte de Dados não Aprovada",
    "Category": "01.Fonte de Dados",
    "Description": "Esses bancos de dados não são autorizados serem utilizados",
    "Severity": 5,
    "Scope": "NamedExpression",
    "Expression": "!RegEx.IsMatch(Expression,\"(?i)(\"\"https:\\/\\/powerbi-cloud-prod\\.alphaservesp\\.com\\/api\"\"|\"\"cpt-srvsqldw01\\\\dw\"\"|WMINCPTSQLDW01\\\\DW\"\"|WMINCPTCAS01\"\"|\"\"DATASTORE\"\"|\"\"192\\.168\\.26\\.10\\\\dwathena_uy\"\"|\"\"IKOL\"\"|\"\"(CPT-SRVSQLDW01\\\\DWMINERVA|WMINCPTSQLDW01\\\\DWMINERVA)\"\".*\"\"(dw|dw_refined)\"\"|\"\"172\\.25\\.2\\.178\"\".*\"\"dw_refined\"\"|syn-stargate-ondemand\\.sql\\.azuresynapse\\.net\"\".*\"\"syn-serverless\"\")\")\r\nand \r\nKind == \"M\"\r\nand\r\nRegEx.IsMatch(Expression,\"(?i)(Sql\\.Database|AnalysisServices\\.Database|OData\\.Feed|PostgreSQL\\.Database)\")",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "MEDIDA_NA_TABELA_MEDIDA",
    "Name": "03.Medidas Devem Estar na Tabela de Medidas",
    "Category": "02.Cálculos e Medidas",
    "Description": "Mover as medidas para o local correto",
    "Severity": 2,
    "Scope": "Measure",
    "Expression": "Table.GetAnnotation(\"PBI_ResultType\") <> \"Text\" && Table.Columns.Count() > 1",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "MEDIDA_ERRO",
    "Name": "04.Medida com Erro",
    "Category": "02.Cálculos e Medidas",
    "Description": "Realize a correção das medidas com erro ou exclua se não é utilizada",
    "Severity": 5,
    "Scope": "Measure",
    "Expression": "ErrorMessage <> \"\"",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "DIVIDE",
    "Name": "05.DIVIDE ao invés de \"/\"",
    "Category": "02.Cálculos e Medidas",
    "Description": "Colunas, medidas ou tabelas calculadas não devem usar o símbolo de divisão em suas expressões (/), a menos que o denominador seja um valor constante. Em vez disso, é recomendável sempre usar a função DIVIDE\r\n\r\nhttps://learn.microsoft.com/pt-br/dax/best-practices/dax-divide-function-operator",
    "Severity": 2,
    "Scope": "Measure, CalculatedColumn, CalculationItem",
    "Expression": "Tokenize().Any(\r\n    Type = DIV and\r\n    Next.Type <> INTEGER_LITERAL and\r\n    Next.Type <> REAL_LITERAL\r\n)",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "EVITE_MEDIDA_DUPLICADA",
    "Name": "06.Medidas com mesmo DAX",
    "Category": "02.Cálculos e Medidas",
    "Description": "Encontrado medidas com o nome diferente, mas que possuem a mesma expressão DAX",
    "Severity": 1,
    "Scope": "Measure",
    "Expression": "Model.AllMeasures.Any(Expression.Replace(\" \",\"\").Replace(\"\\n\",\"\").Replace(\"\\r\",\"\").Replace(\"\\t\",\"\") = outerIt.Expression.Replace(\" \",\"\").Replace(\"\\n\",\"\").Replace(\"\\r\",\"\").Replace(\"\\t\",\"\") and it <> outerIt)",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "FILTER_SINTAX_INADEQUADA",
    "Name": "07.FILTER com Sintaxe Inadequada",
    "Category": "02.Cálculos e Medidas",
    "Description": "Em vez de usar este padrão FILTER('Table','Table'[Column]=\"Value\") para os parâmetros de filtro de uma função CALCULATE ou CALCULATETABLE, use uma das opções abaixo. Para saber se deve usar a função KEEPFILTERS, consulte o segundo link de referência abaixo.\r\n\r\nOption 1: FILTER(VALUES('Table'[Column]),[Measure] > Value)\r\nOption 2: FILTER(ALL('Table'[Column]),[Measure] > Value)\r\n\r\nReference: https://docs.microsoft.com/power-bi/guidance/dax-avoid-avoid-filter-as-filter-argument",
    "Severity": 5,
    "Scope": "Measure, CalculatedColumn, CalculationItem",
    "Expression": "RegEx.IsMatch(Expression,\"(?i)FILTER\\s*\\(([^,]+),[^\\)]+\\1\\[\")",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "ITERADORA_NA_TABELA",
    "Name": "08.Medida Iteradora Rodando na Tabela Inteira",
    "Category": "02.Cálculos e Medidas",
    "Description": "Evite utilizar iteradora para rodar o calculo em cima da tabela inteira, isso deixa a execução da medida mais pesada",
    "Severity": 5,
    "Scope": "Measure, CalculatedColumn, CalculationItem",
    "Expression": "RegEx.IsMatch(\r\nRegEx.Replace(Expression,\"(?i)\\(\\s*\\'*[A-Za-z0-9À-ÿ _]+'*\\s*,\\s*\\'*[A-Za-z0-9À-ÿ _]+\\'*\\[[A-Za-z0-9À-ÿ _]+\\]\\s*\\)\",\"\")\r\n\r\n,\"(?i)(SUMX|AVERAGEX|COUNTX|COUNTAX|MAXX|MINX|PRODUCTX|PERCENTILEX\\.INC|PERCENTILEX\\.EXC|CONCATENATEX|MEDIANX|RANKX|ADDCOLUMNS)\\s*\\(\\s*\\'*[A-Za-z0-9À-ÿ _]+\\'*,\\s*([^\\]]+\\])\")",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "EVITE_VALUES_DISTINCT_TABELA",
    "Name": "09.Evite VALUES ou DISTINCT da Tabela Inteira",
    "Category": "02.Cálculos e Medidas",
    "Description": "Evite rodar a função VALUES ou DISTINCT da tabela inteira ao invés disso referecie somente a coluna necessária, caso precise refereciar 2 colunas ou mais utilize a função SUMMARIZE",
    "Severity": 3,
    "Scope": "Measure",
    "Expression": "RegEx.IsMatch(\r\n  RegEx.Replace(\r\n     Expression,\r\n     \"(?is)(?:COUNTROWS\\s*\\(\\s*VALUES|COUNTROWS\\s*\\(\\s*DISTINCT|,\\s*VALUES|,\\s*DISTINCT)\",\r\n     \"\"\r\n  ),\r\n  \"(?is)(?:VALUES|DISTINCT)\\s*\\(\\s*['A-Za-z0-9À-ÿ_\\s]*\\s*\\)\"\r\n)",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "EVITAR_COUNT_COUNTA_COUNTBLANK",
    "Name": "10.COUNTROWS ao invés de COUNT, COUNTA or COUNTBLANK",
    "Category": "02.Cálculos e Medidas",
    "Description": "Evitar a utilização da funções COUNT, COUNTA and COUNTBLANK aos invés do COUNTROWS\r\n\r\nhttps://learn.microsoft.com/pt-br/dax/best-practices/dax-countrows",
    "Severity": 3,
    "Scope": "Measure",
    "Expression": "RegEx.IsMatch(Expression.Replace(\"DISTINCTCOUNT\",\"\"),\"(?i)COUNT\\s*\\(\")\r\nor\r\nRegEx.IsMatch(Expression,\"(?i)COUNTA\\s*\\(\")\r\nor\r\nRegEx.IsMatch(Expression,\"(?i)COUNTBLANK\\s*\\(\")\r\nor\r\n(\r\nRegex.IsMatch(Expression, \"(?i)COUNTX\\((?:[^[\\]]|\\[[^\\]]*\\])*,\")\r\nand\r\nRegex.IsMatch(Expression, \"(?i)\\,[^\\)]*\\[.*?\\][^\\)]*\\)\")\r\n)\r\nor\r\n(\r\nRegex.IsMatch(Expression, \"(?i)COUNTAX\\((?:[^[\\]]|\\[[^\\]]*\\])*,\")\r\nand\r\nRegex.IsMatch(Expression, \"(?i)\\,[^\\)]*\\[.*?\\][^\\)]*\\)\")\r\n)",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "EVITE_CALCULATE_SEM_FILTRO_OU_MODIFICADOR",
    "Name": "11.Evite CALCULATE([Medida])",
    "Category": "02.Cálculos e Medidas",
    "Description": "Quando você referência uma medida exemplo [Qtd de Vendas] implicitamente o DAX já adiciona uma função CALCULATE, com isso não é necessário colocar uma medida dentro de uma função CALCULATE se não for passar um filtro ou um modificador de contexto",
    "Severity": 1,
    "Scope": "Measure",
    "Expression": "RegEx.IsMatch(Expression,\"(?i)CALCULATE\\s*\\(\\s*\\[\\s*[A-Za-z0-9À-ÿ_ ]*\\]\\s*\\)\")\r\nor\r\nRegEx.IsMatch(Expression,\"(?i)(?:CALCULATE\\s*\\(\\s*DIVIDE\\s*\\(\\s*[[A-Za-z0-9À-ÿ _]+\\]\\s*,\\s*[[A-Za-z0-9À-ÿ _]+\\]\\s*\\)\\s*\\)|CALCULATE\\s*\\(\\s*DIVIDE\\s*\\(\\s*[[A-Za-z0-9À-ÿ _]+\\]\\s*,\\s*[[A-Za-z0-9À-ÿ _]+\\]\\s*,\\s*.*\\)\\s*\\))\")",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "ETAPAS_REDUNDANTES",
    "Name": "12.Etapas Redundantes",
    "Category": "03.Desempenho",
    "Description": "As tabelas devem criadas utilizadando consulta SQL para reduzir a quantidade de etapas no Power Query",
    "Severity": 5,
    "Scope": "Table",
    "Expression": "(\r\nEnableRefreshPolicy = true\r\nand\r\n\r\n!(SourceExpression == null)\r\nand\r\n(\r\n   Regex.Matches(SourceExpression, \"Table.SelectRows\").Count > 1            \r\nor Regex.Matches(SourceExpression, \"Table.TransformColumnTypes\").Count > 1  \r\nor Regex.Matches(SourceExpression, \"Table.RemoveColumns\").Count > 1         \r\nor Regex.Matches(SourceExpression, \"Table.SelectColumns\").Count > 1         \r\nor Regex.Matches(SourceExpression, \"Table.RenameColumns\").Count > 1\r\nor Regex.Matches(SourceExpression, \"Table.Sort\").Count > 0\r\nor Regex.Matches(SourceExpression, \"Table.ReorderColumns\").Count > 0\r\n)\r\n)\r\n\r\nor\r\n(\r\nEnableRefreshPolicy = false\r\nand\r\n\r\nPartitions.Any(\r\n!(Expression == null)\r\nand\r\n(\r\n   Regex.Matches(Expression, \"Table.SelectRows\").Count > 1            \r\nor Regex.Matches(Expression, \"Table.TransformColumnTypes\").Count > 1  \r\nor Regex.Matches(Expression, \"Table.RemoveColumns\").Count > 1         \r\nor Regex.Matches(Expression, \"Table.SelectColumns\").Count > 1         \r\nor Regex.Matches(Expression, \"Table.RenameColumns\").Count > 1\r\nor Regex.Matches(Expression, \"Table.Sort\").Count > 0\r\nor Regex.Matches(Expression, \"Table.ReorderColumns\").Count > 0\r\n)\r\n)\r\n)",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "TABELA_BANCO_DADOS_SEM_SQL",
    "Name": "13.1.Tabela Conectada em Banco de Dados sem Usar SQL",
    "Category": "03.Desempenho",
    "Description": "As tabelas devem criadas utilizadando consulta SQL para reduzir a quantidade de etapas no Power Query",
    "Severity": 4,
    "Scope": "Table",
    "Expression": "(\r\nEnableRefreshPolicy = true\r\nand\r\n!Regex.IsMatch(Regex.Replace(SourceExpression,\"(\\.Select|\\.From)\",\"\"),\"(?i)select.+from\")\r\nand\r\nRegex.IsMatch(SourceExpression,\"(Sql\\.Database|PostgreSQL\\.Database|Databricks|GoogleBigQuery\\.Database|Snowflake\\.Database|AmazonRedshift\\.Database|AmazonRdsForSqlServer\\.Database|AmazonAthena\\.Databases|MySQL\\.Database|Oracle\\.Database|SapHana\\.Database)\")\r\n)\r\n\r\nor\r\n(\r\nEnableRefreshPolicy = false\r\nand\r\nPartitions.Any(\r\n!Regex.IsMatch(Regex.Replace(Expression,\"(\\.Select|\\.From)\",\"\"),\"(?i)select.+from\")\r\nand\r\nRegex.IsMatch(Expression,\"(Sql\\.Database|PostgreSQL\\.Database|Databricks|GoogleBigQuery\\.Database|Snowflake\\.Database|AmazonRedshift\\.Database|AmazonRdsForSqlServer\\.Database|AmazonAthena\\.Databases|MySQL\\.Database|Oracle\\.Database|SapHana\\.Database)\")\r\n)\r\n)",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "COLUNAS_CALCULADAS_POWER_QUERY",
    "Name": "13.2.Colunas Calculadas no Power Query",
    "Category": "03.Desempenho",
    "Description": "Priorize a criação de colunas no SQL antes de criar no Power Query ou em DAX",
    "Severity": 4,
    "Scope": "Table",
    "Expression": "(\r\nEnableRefreshPolicy = true\r\nand\r\nSourceExpression.Contains(\"Table.AddColumn\")\r\n)\r\n\r\nor\r\n(\r\nEnableRefreshPolicy = false\r\nand\r\n\r\nPartitions.Any(\r\nExpression.Contains(\"Table.AddColumn\")\r\n)\r\n)",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "DESATIVAR_REFRESH_TABELA_MANUAL",
    "Name": "15.Desativar Atualização de Tabela Manual",
    "Category": "03.Desempenho",
    "Description": "Desative a atualização das tabelas configuradas como \"Inserir Dados\" ",
    "Severity": 1,
    "Scope": "Table",
    "Expression": "ExcludeFromModelRefresh == false\r\nand\r\nSourceType == \"M\"\r\nand\r\nPartitions.Any(\r\nRegex.IsMatch(Expression,\"(?i)Binary\\.Decompress\\s*\\(\\s*Binary\\.FromText\")\r\n)\r\n",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "COLUNAS_CALCULADAS_DAX",
    "Name": "16.1.Colunas Calculadas no DAX",
    "Category": "03.Desempenho",
    "Description": "Priorize a criação de colunas no SQL antes de criar no Power Query ou em DAX",
    "Severity": 4,
    "Scope": "CalculatedColumn",
    "Expression": "IsDataTypeInferred == true\r\nand\r\n!Table.Name.StartsWith(\"DateTableTemplate_\") \n\r\nand\r\n\n\n!Table.Name.StartsWith(\"LocalDateTable_\")",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "REDUZIR_USO_DE_TABELAS_CALCULADAS",
    "Name": "16.2.Evite Tabelas Calculadas",
    "Category": "03.Desempenho",
    "Description": "Migre a lógica da tabela calculada para o seu data warehouse ou crie uma consulta SQL para retornar o mesmo resultado",
    "Severity": 2,
    "Scope": "CalculatedTable",
    "Expression": "!Regex.IsMatch(Expression,\"(?i)(NAMEOF|GENERATESERIES)\")",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "PREFIXO_FATO_DIMENSAO",
    "Name": "17.Tabelas Devem ter Prefixo \"d\" para Dimensões e \"f\" fara Fatos",
    "Category": "03.Desempenho",
    "Description": "As tabelas devem ter prefixo \"d\" para dimensões e \"f\" fara fatos",
    "Severity": 1,
    "Scope": "Table",
    "Expression": "!Name.StartsWith(\"f\") \r\nand\r\n!Name.StartsWith(\"F\")\r\nand\r\n!Name.StartsWith(\"d\")\r\nand\r\n!Name.StartsWith(\"D\")\r\nand\r\nUsedInRelationships.Any() == true",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "MARCAR_TABELA_DATA",
    "Name": "20.Marcar a dCalendario Como Tabela de Data",
    "Category": "03.Desempenho",
    "Description": "Deve ser marcado a tabela de calendario utilizada no modelo como tabela de data",
    "Severity": 2,
    "Scope": "Table, CalculatedTable",
    "Expression": "\r\n!Name.StartsWith(\"f\")\r\nand\r\n(\r\nDataCategory <> \"Time\"\r\nor\r\nColumns.Any(IsKey == true and DataType == \"DateTime\") == false\r\n)\r\nand\r\n(\r\nUsedInRelationships.Any(FromColumn.DataType.ToString() == \"DateTime\" and current.Name == FromTable.Name and FromCardinality == \"One\" and CrossFilteringBehavior == CrossFilteringBehavior.OneDirection)\r\nor\r\n\n\n\nUsedInRelationships.Any(ToColumn.DataType.ToString() == \"DateTime\" and current.Name == ToTable.Name and ToCardinality == \"One\" and CrossFilteringBehavior == CrossFilteringBehavior.OneDirection)\n\r\n)\r\nand\r\n!HasAnnotation(\"__PBI_LocalDateTable\")",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "SEM_ATUALIZACAO_INCREMENTAL",
    "Name": "22.Atualização Incremental Desativada",
    "Category": "03.Desempenho",
    "Description": "As tabelas fato devem possuir atualização incremental, porém deve ser verificado se é possivel fazer com a coluna de data da tabela.",
    "Severity": 5,
    "Scope": "Table",
    "Expression": "\r\nEnableRefreshPolicy = false\r\n\r\nand\r\n(\r\nUsedInRelationships.Any(ToCardinality == \"One\" and FromCardinality == \"Many\" and current.Name == FromTable.Name)\r\nor\r\nUsedInRelationships.Any(ToCardinality == \"Many\" and FromCardinality == \"One\" and current.Name == ToTable.Name)\r\n)\r\n\r\nAnd\r\n!RegEx.IsMatch(Name,\"^[dD]\")\r\n\r\n",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "Desativar_Data_Hora_Automática",
    "Name": "24.Desativar Data/Hora Automática",
    "Category": "03.Desempenho",
    "Description": "Deve ser desabilitado a função Data/Hora Aultomática no Power BI",
    "Severity": 4,
    "Scope": "Table, CalculatedTable",
    "Expression": "ObjectTypeName == \"Calculated Table\"\n\r\nand\r\n(\r\n\n(\nName.StartsWith(\"DateTableTemplate_\") \n\nor \n\nName.StartsWith(\"LocalDateTable_\")\n)\r\nor\r\nHasAnnotation(\"__PBI_LocalDateTable\")\r\n)",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "EVITE_MODELAGEM_SNOW_FLAKE",
    "Name": "26.1.Evite Modelagem Snow Flake",
    "Category": "04.Transformação e modelagem Power Query",
    "Description": "Utilize preferenciamente a modelagem Star Schema\r\nReferência: https://docs.microsoft.com/power-bi/guidance/star-schema",
    "Severity": 2,
    "Scope": "Table, CalculatedTable",
    "Expression": "UsedInRelationships.Any(current.Name == FromTable.Name)\r\nand\r\nUsedInRelationships.Any(current.Name == ToTable.Name)",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "RELACIONAMENTO_1_1_FATO_DIMENSAO",
    "Name": "26.2.Relacionamento 1:1 entre Fato e Dimensão está Correto?",
    "Category": "04.Transformação e modelagem Power Query",
    "Description": "Relacionamento entre fato e dimensão deveria ser 1 para muitos, ou você feito o relacionamento incorreto ou na verdade são tabelas dimensões",
    "Severity": 2,
    "Scope": "Relationship",
    "Expression": "(FromTable.Name.StartsWith(\"d\") and ToTable.Name.StartsWith(\"f\") and ToCardinality == \"One\" and FromCardinality == \"One\")\r\nor\r\n(FromTable.Name.StartsWith(\"f\") and ToTable.Name.StartsWith(\"d\") and ToCardinality == \"One\" and FromCardinality == \"One\")",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "RELACIONAMENTO_MESMO_TIPO",
    "Name": "27.Corrigir tipagem dos dados, colunas do relacionamentos devem ter o mesmo tipo",
    "Category": "04.Transformação e modelagem Power Query",
    "Description": "As colunas usadas em um relacionamento devem ser do mesmo tipo de dados",
    "Severity": 5,
    "Scope": "Relationship",
    "Expression": "FromColumn.DataType != ToColumn.DataType",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "RELACIONAMENTO_INATIVO_SEM_USO",
    "Name": "28.Relacionamento Inativo não é utilizado",
    "Category": "04.Transformação e modelagem Power Query",
    "Description": "Modelo possuem relacionamentos inativos, mas não possuem uma USERELATIONSHIP para ativar ele",
    "Severity": 2,
    "Scope": "Relationship",
    "Expression": "IsActive == false\r\nand not\r\n(\r\nModel.AllMeasures.Any(\r\nRegEx.IsMatch(RegEx.Replace(Expression,\"'\",\"\"),\r\n\"(?i)USERELATIONSHIP\\s*\\(\\s*\" +\r\ncurrent.FromTable.Name + \"\\[\" + \r\ncurrent.FromColumn.Name + \"\\]\\s*,\\s*\" +\r\ncurrent.ToTable.Name + \"\\[\" +\r\ncurrent.ToColumn.Name + \"\\]\")\r\nor \r\nRegEx.IsMatch(RegEx.Replace(Expression,\"'\",\"\"),\r\n\"(?i)USERELATIONSHIP\\s*\\(\\s*\" +\r\ncurrent.ToTable.Name + \"\\[\" + \r\ncurrent.ToColumn.Name + \"\\]\\s*,\\s*\" +\r\ncurrent.FromTable.Name + \"\\[\" +\r\ncurrent.FromColumn.Name + \"\\]\")\r\n)\r\n\r\n\r\nor\r\nModel.AllCalculationItems.Any(\r\nRegEx.IsMatch(RegEx.Replace(Expression,\"'\",\"\"),\r\n\"(?i)USERELATIONSHIP\\s*\\(\\s*\" +\r\ncurrent.FromTable.Name + \"\\[\" + \r\ncurrent.FromColumn.Name + \"\\]\\s*,\\s*\" +\r\ncurrent.ToTable.Name + \"\\[\" +\r\ncurrent.ToColumn.Name + \"\\]\")\r\nor\r\nRegEx.IsMatch(RegEx.Replace(Expression,\"'\",\"\"),\r\n\"(?i)USERELATIONSHIP\\s*\\(\\s*\" +\r\ncurrent.ToTable.Name + \"\\[\" + \r\ncurrent.ToColumn.Name + \"\\]\\s*,\\s*\" +\r\ncurrent.FromTable.Name + \"\\[\" +\r\ncurrent.FromColumn.Name + \"\\]\")\r\n)\r\n)\r\n",
    "FixExpression": "Delete()",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "RELACIONAMENTO_BI_DIRECIONAL",
    "Name": "29.Relacionamento Bi-Direcional",
    "Category": "05.Boas práticas filtros e visuais/ relacionamentos bidirecionais",
    "Description": "Evite relacionamentos bi-direcionais, o ideal é sempre utilizar relacionamentos unidirecionais",
    "Severity": 3,
    "Scope": "Relationship",
    "Expression": "CrossFilteringBehavior == CrossFilteringBehavior.BothDirections and !(FromCardinality == \"One\" and ToCardinality == \"One\")",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "RELACIONAMENTO_MUITOS_MUITOS",
    "Name": "30.Possui Relacionamentos Muitos para Muitos",
    "Category": "05.Boas práticas filtros e visuais/ relacionamentos bidirecionais",
    "Description": "Evite relacionamentos de muitos para muitos",
    "Severity": 3,
    "Scope": "Relationship",
    "Expression": "FromCardinality == \"Many\"\n and ToCardinality == \"Many\"",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "CORRIGIR_PARAMETRO_INCREMENTAL",
    "Name": "[Extra Atualização] Corrigir Parametro da Atualização Incremental",
    "Category": "06.Extras",
    "Description": "Os parametros foram digitados de forma correta \"RangeStart\" e \"RangeEnd\"",
    "Severity": 5,
    "Scope": "NamedExpression",
    "Expression": "(\r\n!Name.Contains(\"RangeStart\") and\r\nName.IndexOf(\"RangeStart\", StringComparison.OrdinalIgnoreCase) >=0\r\n)\r\nor\r\n(\r\n!Name.Contains(\"RangeEnd\") and\r\nName.IndexOf(\"RangeEnd\", StringComparison.OrdinalIgnoreCase) >=0\r\n)",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "CORRIGIR_FILTRO_INCREMENTAL",
    "Name": "[Extra Atualização] Corrigir Filtro da Atualização Incremental",
    "Category": "06.Extras",
    "Description": "O filtro a atualização incremental deve ser Data >= \"RangeStart\" e Data < \"RangeEnd\"\r\nsempre para RangeStart deve ser maior ou igual\r\nsempre para RangeEnd deve ser somente menor",
    "Severity": 5,
    "Scope": "Table",
    "Expression": "(\r\nEnableRefreshPolicy = true\r\nand\r\nSourceExpression.Contains(\"RangeStart\")\r\nand\r\nSourceExpression.Contains(\"RangeEnd\") \r\nand\r\nRegex.IsMatch(SourceExpression, \"(?is)(?:(?:>|<|<=)\\s*'\"\"[A-Za-z0-9À-ÿ_\\s&\\(\\.]*?RangeStart\\s*,\\s*['\"\"A-Za-z0-9À-ÿ_\\s&\\)\\.-]*?(?:>=|<=|>)\\s*'\"\"\\s*&\\s*[A-Za-z0-9 \\(\\.]*?RangeEnd|(?:>|<|<=)\\s*'\"\"[A-Za-z0-9À-ÿ_\\s&\\(\\.]*?RangeStart\\s*,\\s*['\"\"A-Za-z0-9À-ÿ_\\s&\\)\\.-]*?(?:<)\\s*'\"\"\\s*&\\s*[A-Za-z0-9 \\(\\.]*?RangeEnd|(?:>=)\\s*'\"\"[A-Za-z0-9À-ÿ_\\s&\\(\\.]*?RangeStart\\s*,\\s*['\"\"A-Za-z0-9À-ÿ_\\s&\\)\\.-]*?(?:>=|<=|>)\\s*'\"\"\\s*&\\s*[A-Za-z0-9 \\(\\.]*?RangeEnd)\")\r\n)\r\n\r\nor\r\n\r\n(\r\nEnableRefreshPolicy = false\r\nand\r\nPartitions.Any(\r\n\r\n\tExpression.Contains(\"RangeStart\")\r\n\tand\r\n        Expression.Contains(\"RangeEnd\") \r\n\tand\r\n        Regex.IsMatch(Expression, \"(?is)(?:(?:>|<|<=)\\s*'\"\"[A-Za-z0-9À-ÿ_\\s&\\(\\.]*?RangeStart\\s*,\\s*['\"\"A-Za-z0-9À-ÿ_\\s&\\)\\.-]*?(?:>=|<=|>)\\s*'\"\"\\s*&\\s*[A-Za-z0-9 \\(\\.]*?RangeEnd|(?:>|<|<=)\\s*'\"\"[A-Za-z0-9À-ÿ_\\s&\\(\\.]*?RangeStart\\s*,\\s*['\"\"A-Za-z0-9À-ÿ_\\s&\\)\\.-]*?(?:<)\\s*'\"\"\\s*&\\s*[A-Za-z0-9 \\(\\.]*?RangeEnd|(?:>=)\\s*'\"\"[A-Za-z0-9À-ÿ_\\s&\\(\\.]*?RangeStart\\s*,\\s*['\"\"A-Za-z0-9À-ÿ_\\s&\\)\\.-]*?(?:>=|<=|>)\\s*'\"\"\\s*&\\s*[A-Za-z0-9 \\(\\.]*?RangeEnd)\")\r\n\t\r\n)\r\n)",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "HISTORICO_TRIMESTRE",
    "Name": "[Extra Atualização] Histórico da atualização incremental utilizar Trimestre ao invés de Ano",
    "Category": "06.Extras",
    "Description": "Configurar o histórico como trimestre ao invés de ano, com isso reduz o volume de dados históricos.",
    "Severity": 4,
    "Scope": "Table",
    "Expression": "EnableRefreshPolicy = true\r\nand\r\nRollingWindowGranularity = \"YEAR\"",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "EVITE_MODO_DIRECT_QUERY",
    "Name": "[Extra Atualização] Evite Tabelas no Modo Direct Query",
    "Category": "06.Extras",
    "Description": "Evite deixar as tabelas no modo \"Direct Query\"",
    "Severity": 5,
    "Scope": "Partition",
    "Expression": "Mode == \"DirectQuery\"",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "INCREMENTAL_DIA_MES",
    "Name": "[Extra Atualização] Avaliar Incremental de Dia para Mês",
    "Category": "06.Extras",
    "Description": "Avaliar se é mais performatico atualização incremental por mês ao invés de fazer do dia",
    "Severity": 4,
    "Scope": "Table",
    "Expression": "EnableRefreshPolicy = true\r\nand\r\nIncrementalGranularity = \"Day\"\r\nand\r\nIncrementalPeriods > 7",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "INCREMENTAL_HISTORICO",
    "Name": "[Extra Atualização] Historico da Incremental Maior que 5 Anos",
    "Category": "06.Extras",
    "Description": "Verificar se realmente é necessário manter um histórico maior que 5 anos de dados",
    "Severity": 4,
    "Scope": "Table",
    "Expression": "EnableRefreshPolicy = true\r\nand\r\nRollingWindowGranularity = \"YEAR\"\r\nand\r\nRollingWindowPeriods > 5",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "EVITE_INCREMENTAL_MES_TRIMESTRE",
    "Name": "[Extra Atualização] Evite Incremental de 1 Mês ou 1 Trimestre",
    "Category": "06.Extras",
    "Description": "O comportamento da incremental 1 mês não é de atualizar os ultimos 30 dias e sim atualizar somente o mês atual\r\nExemplo para o dia 01/04/2024\r\nIncremental de 1 Mês atualiza o periodo     = 01/04/2024 - 30/04/2024 (não considera mês anterior)\r\nIncremental de 2 Meses atualiza o periodo = 01/03/2024 - 30/04/2024 (considera mês anterior)\r\n\r\nO mesmo se aplicada para o trimestre, caso precise que seus dados atualizem os ultimos 3 meses, utilize a opção de meses ao invés de trimestre",
    "Severity": 4,
    "Scope": "Table",
    "Expression": "\r\nEnableRefreshPolicy = true\r\nand\r\n(\r\nIncrementalGranularity = \"Month\"\r\nor\r\nIncrementalGranularity = \"Quarter\"\r\n)\r\nand\r\nIncrementalPeriods = 1",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "ORDER_BY_CONSULTA_SQL",
    "Name": "[Extra Consulta SQL] Evite ORDER BY da Consulta SQL",
    "Category": "06.Extras",
    "Description": "A função de ORDER BY deixa a consulta SQL muito pesada é recomendavel não utilizar essa função em tabelas principamente em tabelas fatos",
    "Severity": 5,
    "Scope": "Table",
    "Expression": "(\r\nEnableRefreshPolicy = true\r\nand\r\nRegex.IsMatch(Regex.Replace(SourceExpression,\"(?is)(?:PARTITION\\s*BY.*?ORDER\\s*BY|row_number.*?ORDER\\s*BY|OVER\\s*\\(\\s*ORDER\\s*BY|--.*?\\#\\(lf\\)|--.*?\\n)\",\"\"),\"(?is)ORDER\\s*BY\")\r\n)\r\n\r\nor\r\n\r\n(\r\nEnableRefreshPolicy = false\r\nand\r\nPartitions.Any(\r\nRegex.IsMatch(Regex.Replace(Expression,\"(?is)(?:PARTITION\\s*BY.*?ORDER\\s*BY|row_number.*?ORDER\\s*BY|OVER\\s*\\(\\s*ORDER\\s*BY|--.*?\\#\\(lf\\)|--.*?\\n)\",\"\"),\"(?is)ORDER\\s*BY\")\r\n)\r\n)",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "INCREMENTAL_FOLDING_DESATIVADO",
    "Name": "[Extra Consulta SQL] Incremental com Query Folding Desativado",
    "Category": "06.Extras",
    "Description": "Verificar se o Query Folding dessas tabelas está ativo",
    "Severity": 3,
    "Scope": "Table",
    "Expression": "!(GetAnnotation(\"PBI_IsMQueryFoldable\") = \"True\")\r\nand\r\nPartitions.Any(\r\nExpression.IndexOf(\"RangeStart\", StringComparison.OrdinalIgnoreCase) >= 0\r\nand\r\nExpression.IndexOf(\"RangeEnd\", StringComparison.OrdinalIgnoreCase) >= 0\r\n)\r\n\r\n\r\n",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "EVITE_FONTE_DADOS_PC",
    "Name": "[Extra Power Query] Evite Fonte de Dados do Computador \"C:\\Users\"",
    "Category": "06.Extras",
    "Description": "Ao invés de carregar arquivos localizados no seu computador, utilize o Sharepoint para armazenar esses arquivos.",
    "Severity": 5,
    "Scope": "Partition",
    "Expression": "Regex.IsMatch(Expression,\"(?i)C:\\\\Users\\\\\")\r\n",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "EVITE_FONTE_DADOS_ONEDRIVE",
    "Name": "[Extra Power Query] Evite Fonte de Dados do OneDrive",
    "Category": "06.Extras",
    "Description": "Ao invés de carregar arquivos localizados no seu computador, utilize o Sharepoint para armazenar esses arquivos.",
    "Severity": 3,
    "Scope": "Partition",
    "Expression": "Regex.IsMatch(Expression,\"(?i)my\\.sharepoint\\.com/personal\")\r\n",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "SHAREPOINT_SEM_GARANTIA",
    "Name": "[Extra Power Query] Fonte de Dados Sharepoint Sem Garantia de Manutenção",
    "Category": "06.Extras",
    "Description": "Fonte de dados Sharepoint é aprovada, porém a engenharia de dados não garante manutenção e nem governança.",
    "Severity": 1,
    "Scope": "Partition",
    "Expression": "SourceType == \"M\"\r\nand\r\nRegEx.IsMatch(Query,\"(?i)(SharePoint)\")",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "SHAREPOINT_SEM_GARANTIA_2",
    "Name": "[Extra Power Query] Fonte de Dados Sharepoint Sem Garantia de Manutenção",
    "Category": "06.Extras",
    "Description": "Fonte de dados Sharepoint é aprovada, porém a engenharia de dados não garante manutenção e nem governança.",
    "Severity": 1,
    "Scope": "NamedExpression",
    "Expression": "Kind == \"M\"\r\nand\r\nRegEx.IsMatch(Expression,\"(?i)(SharePoint)\")",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "RELACIONAMENTO_FATO_FATO",
    "Name": "[Extra Relacionamentos] Relacionamento de Fato para Fato",
    "Category": "06.Extras",
    "Description": "Evite relacionamento entre fato utilize as tabelas dimensões para isso para isso",
    "Severity": 5,
    "Scope": "Relationship",
    "Expression": "FromTable.Name.StartsWith(\"f\") and ToTable.Name.StartsWith(\"f\")",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "USERELATIONSHIP_TABELA_COM_RLS",
    "Name": "[Extra Relacionamentos] Evite USERELATIONSHIP em Tabelas com Filtro de RLS",
    "Category": "06.Extras",
    "Description": "Não utilize a função USERELATIONSHIP em tabelas com RLS aplicado, pois não funcionam como esperado.\r\n",
    "Severity": 5,
    "Scope": "Table, CalculatedTable",
    "Expression": "\r\nModel.AllMeasures.Any(RegEx.IsMatch(RegEx.Replace(Expression,\"\\*\",\"\"),\"(?i)USERELATIONSHIP\\s*\\(\\s*.+?\\'*\" + RegEx.Replace(current.Name,\"\\*\",\"\") + \"\\'*\\[\"))\r\nand\r\nRowLevelSecurity.Any(it <> null)",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "VERIFICAR_UTILIZACAO_TABELA",
    "Name": "[Extra Relacionamentos] Verificar Utilização de Tabela 1 Relacionamento e Coluna",
    "Category": "06.Extras",
    "Description": "Tabela que possui uma unica coluna relacionando com outra tabela, tem grande chance de não estar sendo utilizada. Verifique no Measure Killer aonde ela está sendo utilizada",
    "Severity": 3,
    "Scope": "Table",
    "Expression": "Columns.Count() == UsedInRelationships.Count() && Columns.Count() == 1",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "EVITE_DIMENSOES_DE_ATRIBUTO_UNICO",
    "Name": "[Extra Relacionamentos] Evite dimensões de atributo único que não sejam compartilhadas por vários fatos",
    "Category": "06.Extras",
    "Description": "Em geral, a normalização excessiva deve ser evitada. Se uma dimensão contiver apenas um atributo e não for compartilhada por vários fatos, considere mover o atributo para a tabela de fatos.",
    "Severity": 2,
    "Scope": "Table",
    "Expression": "Columns.Count(IsVisible and not UsedInRelationships.Any()) = 1 and\nModel.Relationships.Count(ToTable = outerIt) = 1",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "DISTINCTCOUNT_SUMX_VALUES",
    "Name": "[Extra Medidas] DISTINCTCOUNT ao invés de SUMX(VALUES(tabela[Coluna]),1)",
    "Category": "06.Extras",
    "Description": "Para contar valores distintos utilize a função DISTINCTCOUNT \r\n\r\nRecomendado:\r\nDISTINCTCOUNT(TABELA[Coluna])\r\n\r\nEvitar:\r\nSUMX(VALUES(tabela[Coluna]),1)",
    "Severity": 3,
    "Scope": "Measure",
    "Expression": "RegEx.IsMatch(Expression,\"(?i)SUMX\\s*\\(\\s*(?:VALUES|DISTINCT)\\s*\\(\\s*'*[A-Za-z0-9À-ÿ _]+\\'*\\s*\\[[A-Za-z0-9À-ÿ _]+\\]\\s*\\)\\s*,\\s*1\\s*\\)\")",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "DISTINCTCOUNTNOBLANK_DISTINCTCOUNT_BLANK",
    "Name": "[Extra Medidas] DISTINCTCOUNTNOBLANK ao invés de DISTINCTCOUNT <> Blank()",
    "Category": "06.Extras",
    "Description": "Para contar valores distintos desconsiderando linhas em branco utilize a função DISTINCTCOUNT \r\n\r\nRecomendado:\r\nDISTINCTCOUNTNOBLANK(TABELA[Coluna])\r\n\r\nEvitar:\r\nCALCULATE(\r\n         DISTINCTCOUNT(Tabela[Coluna]),\r\n         Tabela[Coluna] <> Blank()\r\n)\r\n\r\nou \r\n\r\nCALCULATE(\r\n         DISTINCTCOUNT(Tabela[Coluna]),\r\n         Tabela[Coluna] <> 0\r\n)",
    "Severity": 3,
    "Scope": "Measure",
    "Expression": "RegEx.IsMatch(Expression,\"(?i)CALCULATE\\s*\\(\\s*DISTINCTCOUNT\\s*\\(\\s*'*[A-Za-z0-9À-ÿ _]+\\'*\\s*\\[[A-Za-z0-9À-ÿ _]+\\]\\s*\\)\\s*,\\s*'*[A-Za-z0-9À-ÿ _]+\\'*\\s*\\[[A-Za-z0-9À-ÿ _]+\\]\\s*<>\\s*(?:BLANK\\(\\s*\\)|0)\\s*\\)\")",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "EVITAR_IFERROR_ISERROR",
    "Name": "[Extra Medidas] Evitar a função IFERROR e ISERROR",
    "Category": "06.Extras",
    "Description": "Não utilize as funções IFERROR e ISERROR, ao invés disso deve ser feito a correção do DAX para a função não retornar erro.\r\n\r\nhttps://learn.microsoft.com/pt-br/dax/best-practices/dax-error-functions#recommendations",
    "Severity": 3,
    "Scope": "Measure",
    "Expression": "RegEx.IsMatch(Expression,\"(?i)IFERROR\\s*\\(\")\r\nor\r\nRegEx.IsMatch(Expression,\"(?i)ISERROR\\s*\\(\")",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "REFERENCIOU_A_MESMA_MEDIDA",
    "Name": "[Extra Medidas] Referenciou Mesma Medida ao Invés de usar Variável",
    "Category": "06.Extras",
    "Description": "As colunas usadas em um relacionamento devem ser do mesmo tipo de dados",
    "Severity": 4,
    "Scope": "Measure",
    "Expression": "RegEx.IsMatch(Regex.Replace(Regex.Replace(Expression, \"\\r\\n?|\\n\", \" \"),\"CALCULATE\\s*\\(\\s*\\[(?:(?!\\,).)*,\", \"\"), \"(?i)[^A-Za-z0-9À-ÿ']\\[([^\\]]+)\\].*?[^A-Za-z0-9À-ÿ']\\[\\1\\]\")\r\nand\r\n!RegEx.IsMatch(Expression,\"(?i)(:?SUMX|COUNTX|TOPN|AVERAGEX|COUNTAX|MAXX|MINX|PRODUCTX|PERCENTILEX.EXC|PERCENTILEX.INC|CONCATENATEX|MEDIANX|TOPN|RANKX|ADDCOLUMNS)\")",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "VARIAVEL_AVERAGE",
    "Name": "[Extra Medidas] Utilizar Várivel para o AVERAGE",
    "Category": "06.Extras",
    "Description": "Referenciado o mesmo calculo com AVERAGE",
    "Severity": 3,
    "Scope": "Measure",
    "Expression": "RegEx.IsMatch(Regex.Replace(Regex.Replace(Expression, \"\\r\\n?|\\n\", \" \"),\"CALCULATE\\s*\\(\\s*(?:(?!\\,).)*,\", \"\"), \"AVERAGE\\s*\\(([^\\]]+)\\].*?\\(\\1\\]\")",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "VARIAVEL_COUNTA",
    "Name": "[Extra Medidas] Utilizar Várivel para o COUNTA",
    "Category": "06.Extras",
    "Description": "Referenciado o mesmo calculo com COUNTA",
    "Severity": 3,
    "Scope": "Measure",
    "Expression": "RegEx.IsMatch(Regex.Replace(Regex.Replace(Expression, \"\\r\\n?|\\n\", \" \"),\"CALCULATE\\s*\\(\\s*(?:(?!\\,).)*,\", \"\"), \"COUNTA\\s*\\(([^\\]]+)\\].*?\\(\\1\\]\")",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "VARIAVEL_COUNTROWS",
    "Name": "[Extra Medidas] Utilizar Várivel para o COUNTROWS",
    "Category": "06.Extras",
    "Description": "Referenciado o mesmo calculo com COUNTROWS",
    "Severity": 3,
    "Scope": "Measure",
    "Expression": "RegEx.IsMatch(Regex.Replace(Regex.Replace(Expression, \"\\r\\n?|\\n\", \" \"),\"CALCULATE\\s*\\(\\s*(?:(?!\\,).)*,\", \"\"), \"COUNTROWS\\s*\\(([^\\]]+)\\).*?COUNTROWS\\s*\\(\\1\\)\")",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "VARIAVEL_DISTINCT",
    "Name": "[Extra Medidas] Utilizar Várivel para o DISTINCT",
    "Category": "06.Extras",
    "Description": "Referenciado o mesmo calculo com DISTINCT",
    "Severity": 3,
    "Scope": "Measure",
    "Expression": "RegEx.IsMatch(Regex.Replace(Regex.Replace(Expression, \"\\r\\n?|\\n\", \" \"),\"CALCULATETABLE\\s*\\(\\s*(?:(?!\\,).)*,\", \"\"), \"DISTINCT\\s*\\(([^\\]]+)\\).*?DISTINCT\\s*\\(\\1\\)\")",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "VARIAVEL_MAX",
    "Name": "[Extra Medidas] Utilizar Várivel para o MAX",
    "Category": "06.Extras",
    "Description": "Referenciado o mesmo calculo com MAX",
    "Severity": 3,
    "Scope": "Measure",
    "Expression": "RegEx.IsMatch(Regex.Replace(Regex.Replace(Expression, \"\\r\\n?|\\n\", \" \"),\"CALCULATE\\s*\\(\\s*(?:(?!\\,).)*,\", \"\"), \"MAX\\s*\\(([^\\]]+)\\].*?MAX\\s*\\(\\1\\]\")",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "VARIAVEL_MAXA",
    "Name": "[Extra Medidas] Utilizar Várivel para o MAXA",
    "Category": "06.Extras",
    "Description": "Referenciado o mesmo calculo com MAXA",
    "Severity": 3,
    "Scope": "Measure",
    "Expression": "RegEx.IsMatch(Regex.Replace(Regex.Replace(Expression, \"\\r\\n?|\\n\", \" \"),\"CALCULATE\\s*\\(\\s*(?:(?!\\,).)*,\", \"\"), \"MAXA\\s*\\(([^\\]]+)\\].*?MAXA\\s*\\(\\1\\]\")",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "VARIAVEL_MIN",
    "Name": "[Extra Medidas] Utilizar Várivel para o MIN",
    "Category": "06.Extras",
    "Description": "Referenciado o mesmo calculo com MIN",
    "Severity": 3,
    "Scope": "Measure",
    "Expression": "RegEx.IsMatch(Regex.Replace(Regex.Replace(Expression, \"\\r\\n?|\\n\", \" \"),\"CALCULATE\\s*\\(\\s*(?:(?!\\,).)*,\", \"\"), \"MIN\\s*\\(([^\\]]+)\\].*?MIN\\s*\\(\\1\\]\")",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "VARIAVEL_MINA",
    "Name": "[Extra Medidas] Utilizar Várivel para o MINA",
    "Category": "06.Extras",
    "Description": "Referenciado o mesmo calculo com MINA",
    "Severity": 3,
    "Scope": "Measure",
    "Expression": "RegEx.IsMatch(Regex.Replace(Regex.Replace(Expression, \"\\r\\n?|\\n\", \" \"),\"CALCULATE\\s*\\(\\s*(?:(?!\\,).)*,\", \"\"), \"MINA\\s*\\(([^\\]]+)\\].*?MINA\\s*\\(\\1\\]\")",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "VARIAVEL_COUNT",
    "Name": "[Extra Medidas] Utilizar Várivel para o COUNT",
    "Category": "06.Extras",
    "Description": "Referenciado o mesmo calculo com COUNT",
    "Severity": 3,
    "Scope": "Measure",
    "Expression": "RegEx.IsMatch(Regex.Replace(Regex.Replace(Expression, \"\\r\\n?|\\n\", \" \"),\"CALCULATE\\s*\\(\\s*(?:(?!\\,).)*,\", \"\"), \"COUNT\\s*\\(([^\\]]+)\\].*?\\(\\1\\]\")",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "VARIAVEL_SUM",
    "Name": "[Extra Medidas] Utilizar Várivel para o SUM",
    "Category": "06.Extras",
    "Description": "Referenciado o mesmo calculo com SUM",
    "Severity": 3,
    "Scope": "Measure",
    "Expression": "RegEx.IsMatch(Regex.Replace(Regex.Replace(Expression, \"\\r\\n?|\\n\", \" \"),\"CALCULATE\\s*\\(\\s*(?:(?!\\,).)*,\", \"\"), \"SUM\\s*\\(([^\\]]+)\\].*?SUM\\s*\\(\\1\\]\")",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "VARIAVEL_VALUES",
    "Name": "[Extra Medidas] Utilizar Várivel para o VALUES",
    "Category": "06.Extras",
    "Description": "Referenciado o mesmo calculo com VALUES",
    "Severity": 3,
    "Scope": "Measure",
    "Expression": "RegEx.IsMatch(Regex.Replace(Regex.Replace(Expression, \"\\r\\n?|\\n\", \" \"),\"CALCULATETABLE\\s*\\(\\s*(?:(?!\\,).)*,\", \"\"), \"VALUES\\s*\\(([^\\]]+)\\).*?VALUES\\s*\\(\\1\\)\")",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "EVITE_'(X/Y)-1'",
    "Name": "[Extra Medidas] '(X/Y)-1' ao inves (X-Y)/Y",
    "Category": "06.Extras",
    "Description": "Evite: SUM ( 'Sales'[CostAmount] ) / SUM( 'Sales'[SalesAmount] ) - 1\r\nMelhor:\r\nVAR SALES = SUM ( 'Sales'[SalesAmount] ) \r\nDIVIDE ( SALES - SUM ( 'Sales'[CostAmount] ), SALES  )",
    "Severity": 2,
    "Scope": "Measure, CalculatedColumn, CalculationItem",
    "Expression": "RegEx.IsMatch(Regex.Replace(Expression, \"(?:--.*?$|\\/\\/.*?$|--.*?\\n|\\/\\/.*?\\n|(?s)\\/\\*.*?\\*\\/)\", \"\"), \"(?i)DIVIDE\\s*\\(.*\\)\\s*[+-]\\s*\\d[^\\d]\")\r\n",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "TREATAS_INVES_VALUES_DISTINCT",
    "Name": "[Extra Medidas] TREATAS ao invés de Tabela[Coluna] IN VALUES ou DISTINCT",
    "Category": "06.Extras",
    "Description": "Utilize a função TREATAS ao invés de utilizar o IN VALUES ou IN DISTINCT\r\n\r\nEvitar:\r\nTabela1[Coluna1] IN VALUES(Tabela2[Coluna2])\r\nTabela1[Coluna1] IN DISTINCT(Tabela2[Coluna2])\r\n\r\nCorreto:\r\nTREATAS(VALUES(Tabela2[Coluna2]),Tabela1[Coluna1])\r\nTREATAS(DISTINCT(Tabela2[Coluna2]),Tabela1[Coluna1])",
    "Severity": 3,
    "Scope": "Measure",
    "Expression": "RegEx.IsMatch(Expression,\"(?i)IN\\s*(?:VALUES|DISTINCT|SUMMARIZE)\\s*\\(\")",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "MEDIDAS_EVITE_FUNCOES_TEXTO",
    "Name": " [Extra Medidas] Evite Funções de Texto LEFT,FIND,SEARCH,UPPER,SUBSTITUTE, CONTAINSSTRING, ...",
    "Category": "06.Extras",
    "Description": "Evite funções de texto na regra de como LEFT, RIGHT, FIND, SEARCH, CONTAINSSTRING, CONTAINSSTRINGEXACT, MID, UPPER, LOWER, SUBSTITUTE",
    "Severity": 5,
    "Scope": "Measure",
    "Expression": "RegEx.IsMatch(Expression,\"(?i)(?:LEFT|RIGHT|FIND|SEARCH|CONTAINSSTRING|CONTAINSSTRINGEXACT|MID|UPPER|SUBSTITUTE|LOWER)\\s*\\(\")",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "MEDIDAS_COUNTROWS_SUMMARIZE",
    "Name": "[Extra Medidas] Utilizar COUNTROWS e SUMMARIZE ao invés de SUMX, SUMMARIZE e COUNT",
    "Category": "06.Extras",
    "Description": "Para contar quantidade de linhas de uma seleção de colunas utilize COUNTROWS + SUMMARIZE",
    "Severity": 4,
    "Scope": "Measure",
    "Expression": "RegEx.IsMatch(Expression, \"(?i)SUMX\\s*\\([^\\)]*SUMMARIZE\\s*\\([^\\)]*COUNT\\s*\\(\")",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "EVALUATEANDLOG_Nao_Usar_Modelos_Produtivos",
    "Name": "[Extra Medidas] A função EVALUATEANDLOG não deve ser usada em modelos de produção",
    "Category": "06.Extras",
    "Description": "A função EVALUATEANDLOG deve ser usada apenas em ambientes de desenvolvimento/teste e não deve ser usada em modelos de produção.\r\n\r\nReference: https://pbidax.wordpress.com/2022/08/16/introduce-the-dax-evaluateandlog-function/",
    "Severity": 1,
    "Scope": "Measure",
    "Expression": "RegEx.IsMatch(Expression,\"(?i)EVALUATEANDLOG\\s*\\(\")",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "EVITE_USERRELATIONSHIP_EM_TABELAS_COM_RLS",
    "Name": "[Extra Medidas] Evite a função USERELATIONSHIP e RLS na mesma tabela",
    "Category": "06.Extras",
    "Description": "A função USERELATIONSHIP não pode ser usada em uma tabela que também aproveite a segurança em nível de linha (RLS). Isso gerará um erro ao usar a medida específica em um visual. Esta regra destacará a tabela que é usada na função USERELATIONSHIP de uma medida, bem como RLS.\r\n\r\nReference: https://blog.crossjoin.co.uk/2013/05/10/userelationship-and-tabular-row-security/",
    "Severity": 3,
    "Scope": "Table, CalculatedTable",
    "Expression": "Model.AllMeasures.Any(RegEx.IsMatch(RegEx.Replace(Expression,\"\\*\",\"\"),\"(?i)USERELATIONSHIP\\s*\\(\\s*.+?(?=])\\]\\s*,\\s*'*\" + RegEx.Replace(current.Name,\"\\*\", \"\") + \"'*\\[\"))\r\nand\r\nRowLevelSecurity.Any(it <> null)",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "EVITE_DISTINCTCOUNT_COLUNA_RELACIONAMENTO_DE_DADOS_UNICOS",
    "Name": "[Extra Medidas] Evite DISTINCTCOUNT em Coluna de Relacionamento com Dados Unicos",
    "Category": "06.Extras",
    "Description": "Colunas de relacionamento com dados unicos não precisa de contagem distinta, pode se utilizar a função COUNTROWS no lugar",
    "Severity": 5,
    "Scope": "Measure",
    "Expression": "Model.Relationships.Where( ToCardinality.ToString() == \"One\" ).Where( Regex.IsMatch(Regex.Replace(current.Expression,\"'\",\"\"), \"(?i)DISTINCTCOUNT\\s*\\(\\s*\" + ToTable.Name + \"\\[\" + ToColumn.Name  )  ).Count() > 0\r\nor\r\nModel.Relationships.Where( FromCardinality.ToString() == \"One\" ).Where( Regex.IsMatch(Regex.Replace(current.Expression,\"'\",\"\"), \"(?i)DISTINCTCOUNT\\s*\\(\\s*\" + FromTable.Name + \"\\[\" + FromColumn.Name  )  ).Count() > 0",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "PERSPECTIVA_SEM_OBJETOS",
    "Name": "[Extra Opções/Configurações] Perspectivas sem objetos",
    "Category": "06.Extras",
    "Description": "Perspectivas que não contêm objetos (tabelas) provavelmente não são necessárias. Nesta regra, é necessário apenas verificar tabelas, pois adicionar uma coluna/medida/hierarquia a uma perspectiva também adiciona a tabela à perspectiva. Além disso, tabelas em geral abrangem tabelas calculadas e grupos de cálculo também.",
    "Severity": 1,
    "Scope": "Perspective",
    "Expression": "Model.Tables.Any(InPerspective[current.Name]) == false",
    "FixExpression": "Delete()",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "GRUPO_DE_CALCULOS_SEM_ITENS_DE_CALCULO",
    "Name": "[Extra Opções/Configurações] Grupos de cálculo sem itens de cálculo",
    "Category": "06.Extras",
    "Description": "Grupos de cálculo não têm função a menos que tenham itens de cálculo.",
    "Severity": 2,
    "Scope": "CalculationGroup",
    "Expression": "CalculationItems.Count == 0",
    "FixExpression": "Delete()",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "RLS_EVITE_FUNCOES_DE_TEXTO",
    "Name": "[Extra RLS] LEFT,FIND,SEARCH,UPPER,SUBSTITUTE, CONTAINSSTRING, ...",
    "Category": "06.Extras",
    "Description": "Evite funções de texto na regra de RLS como LEFT, RIGHT, FIND, SEARCH, CONTAINSSTRING, CONTAINSSTRINGEXACT, MID, UPPER, LOWER, SUBSTITUTE",
    "Severity": 5,
    "Scope": "TablePermission",
    "Expression": "RegEx.IsMatch(Expression,\"(?i)(?:LEFT|RIGHT|FIND|SEARCH|CONTAINSSTRING|CONTAINSSTRINGEXACT|SUBSTITUTE|MID|UPPER|LOWER)\\s*\\(\")",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "REMOVER_COLUNAS_REDUNDANTES_EM_TABELAS_RELACIONADAS",
    "Name": "[Extra Dados Residuais] Remover colunas redundantes em tabelas relacionadas",
    "Category": "06.Extras",
    "Description": "A remoção de colunas desnecessárias reduz o tamanho do modelo e acelera o carregamento de dados.",
    "Severity": 2,
    "Scope": "DataColumn, CalculatedColumn, CalculatedTableColumn",
    "Expression": "UsedInRelationships.Any() == false \r\nand\r\nModel.AllColumns.Any(Name == current.Name and Table.Name != current.Table.Name and Table.UsedInRelationships.Any(FromTable.Name == current.Table.Name))",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "TABELA_MAIS_30_COLUNAS",
    "Name": "[Extra Dados Residuais] Tabela com Mais de 30 Colunas. Está Normalizada?",
    "Category": "06.Extras",
    "Description": "Verificar se todas colunas são realmente utilizadas ou se existe oportunidade de normalização",
    "Severity": 4,
    "Scope": "Table",
    "Expression": "Columns.Count() > 30",
    "CompatibilityLevel": 1200
  },
  {
    "ID": "MODELO_MAIOR_2G_SEM_INCREMENTAL",
    "Name": "[Extra Dados Residuais] Evite Modelos com Mais de 2GB de Dados e Sem Incremental",
    "Category": "06.Extras",
    "Description": "modelo com mais de 2GB. Verificar se existem colunas não utilizadas, oportunidade de agregar mais os dados e configurar atualização incremental",
    "Severity": 4,
    "Scope": "Model",
    "Expression": "decimal.Parse(Regex.Replace(Database.EstimatedSize,\" MB\", \"\")) > 1000\r\nand\r\nModel.Tables.Any( EnableRefreshPolicy == false )",
    "CompatibilityLevel": 1200
  }
]
